%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: pgp.pdf
%%Creator: Adobe Acrobat 8.0
%%For: al
%%CreationDate: 18.11.2009, 17:41:16
%%BoundingBox: 0 0 439 158
%%HiResBoundingBox: 0 0 438.5453 157.4181
%%CropBox: 0 0 438.5453 157.4181
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4522 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xap:CreatorTool="Acrobat PDFMaker 8.1 for Visio"
   xap:ModifyDate="2009-11-18T17:40:57+03:00"
   xap:CreateDate="2009-11-18T17:37:09+03:00"
   xap:MetadataDate="2009-11-18T17:40:57+03:00"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:813b03a4-7290-4347-87fd-8beab826244c"
   xapMM:InstanceID="uuid:8fa5318a-6560-4dc5-894c-297008574184"
   pdfx:Company="GPU">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Rick Man</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -157.418 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
7.62939e-6 0 mo
7.62939e-6 157.418 li
438.545 157.418 li
438.545 0 li
cp
clp
[1 0 0 1 -13.0909 0 ]ct
.239574 lw
0 lc
1 lj
10 ml
[1.91872 .959361 ] 0 dsh
false sadj
78.6442 128.397 mo
161.505 128.397 li
161.505 80.2904 li
78.6442 80.2904 li
78.6442 128.397 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
/1 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.078 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Arial-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f329c9692a9000000cc000000566376
74203bf221cb000001240000054e6670676d54bf6d3600000674000005ce
676c7966efe02b850000371c0000268a68656164c4f09a1e00000c440000
0036686865610c0f083600000c7c00000024686d74780c3f063800000ca0
00000ef06c6f63610050e6ee00001b9000000ef46d6178700693080a0000
2a84000000206e616d65aad75b3b00002aa4000005f67072657082b00638
0000309c0000067d67646972000000000000000000000000000103880190
00050000059a0533001e011b059a0533005a03d1006602120805020b0604
02020209020400000a870000000000000000000000004d6f6e6f00010020
fffc05d3fe570133073e01b2400001bfdff70000000005ba001905ba0019
05a6001a042600180000ffe70000ffe80000ffe7fe69ffee05ba0019fe6f
ffe202e2000000b5000000b5000000000000000000bc00bf008c00b300a6
00a600b10010010400640079008b008b00c100ea008a00a2009101b40073
007a00a400a200bb01bd0270005a00800017007000c300300103ffd000ac
007d010d0006001200c900cd00560091ff8f0113000b00190043007200b9
03c803d7ffee0146016e0002001b0044005200b603ee00d80104023d0518
0573ff2d0005000900c600cd024cffe70011001500370049004e005c00a6
00a700b500c500db01280543ffdf00210040005300700079008e00a300ca
018f0265027502a403c80555ff9affd7ffee000500080026004600690070
00730077009a00c100ef010a011301c101e50318049cfef2fef9ffa40000
00270034004100450075008000c400cb00d900e500f801550166022b0254
037004050467ff16ffb40002001d0032004a004a004d00550060007c007f
008c009d00b102a3038cfec4fef7000100030003002d00370037003a0056
005a00a400cd00da011101190125012701480153016901a001fb02070239
028102a402f7030503280328033603a303b503dd03df03f10448047804e6
060bff28ff4bff68ff78ff9fffbfffe10012001f0028004c005a005c005e
00610070007700810083008800b1009c009c009d009f00a500b600b800b9
00ba00d300df00e100f200f7010e0132013b013c0166016c017801ae01b5
01b701cf01d2025d026102a202cd0323035a03a303a40400044404500473
04d2fe00fe38fe8cfeb1feceff0effb2ffc7ffecfffd0005001f00210025
0026002d00580065008100850091009900a500ab00af00b000b000ba00db
00dc00e900f80109010901100114011701240129012d012f013601500151
015a0167017401790182018e01900199019c01b001b301b701be01c501da
01e801f001f201fb02000200020b020f021f0222022c022d022e024e0267
0287029002ac02b502bc02bc02d002d402d802db02e502f102f903110314
0314032203260348034a035c036f03780379037e03ab03b503cb03e00404
0405040f0428042c048404a504af04cf04eb04f9050b058e0593059805e5
05e506000610063d06500668069506b806d9070307510766077e077f0782
07b60800082308ac00b200bf00b100af000000000000000000000000025c
00a100d301be00de01a6031402ab015002a70196010e0318006b039b01d1
054b0089023c02b0014d021603f301760176001503a901f400f400b60204
02d8012b04a701a000bc01bd028c026b0278040f015704a904fd017404d2
040302e400a602ee00000000061404a7000002760000016d013e00000267
006d009e021400cb02a40085007100c2009e0609029000b9008f00260248
003501490091009902ef00eb008e0011013f006a007900fd01a3057402a1
017a03e8020c005601fd02df013b057400660610008101b3024e03cb01e4
00cd02bc0132014b01680239016200fd00e601a201e60255004d028300a3
046705d401dd012b014e05680070000004e003490366021302bb00000000
00000000000000000000000000af00b4000300cd004c03c8005c01920072
00cd022b0049026f009d03bd01e900b4017c046703680099027802040183
028102ac00b30348040b004200b403b400be01a803d6012b00af0478016e
0193ff45fd5d00f506a604ae03b10536041cffcafedc01a501d0ffba02f1
0037ffca0355fe67019c04190055007c00e50072006d000b00ab012b009c
00db01a60008012b00250056008e00a500150010010900cb00460017004c
005e01f200b80083001101360128004e0222006b02410720061400000727
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c
482d2c01182f2d2c20b0032545b019234445b01a23444565234520b00325
606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe000
1a45208a54582321b03f1b235961441cb114008a5279b31940201945208a
54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d
2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2c
b11011432343650b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c4bb06451584569b00943608a103a1b212121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c
352d2c76b8023623701020b802364520b0005058b00161593a2f182d2c21
210c6423648bb84000622d2c21b08051580c6423648bb82000621bb20040
2f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2cb4000100000015b00826b008
26b00826b008260f10161345683ab001162d2cb4000100000015b00826b0
0826b00826b008260f1016134568653ab001162d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb01343
58021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb004
25b00425060c6423646164b807085158b00425b00425012046b010604820
46b0106048590a21211b2121592d2cb012435c580cb00425b00425060c64
23646164b807085158b00425b00425012046b8fff060482046b8fff06048
590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b
515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d
2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46
2346608a8a462320468a608a61b8ff8062232010238ab902a502a58a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042
b123018851b1400188535a58b910000020885458b202010243604259b124
01885158b920000040885458b202020243604259b12401885458b2022002
436042004b014b5258b2020802436042591bb940000080885458b2020402
43604259b94000008063b80100885458b202080243604259b94000010063
b80200885458b2021002436042595959592d0000000100000002e667ea73
a0d45f0f3cf50819080000000000a372c2bf00000000b5c9a697fbddfd67
08a707fb00000009000100010000000000010000073efe4e004308c0fbdd
fd4b08a70021000700000000000000000000000003bc0600010000000000
02390000023900000239007302d7010b0473005f04730069071d00c70556
00a10187010402aa00ad02aaff93031d00ec04ac00b80239003102aa005f
023900760239ff98047300910473012f04730078047300700473005d0473
008e047300ab047300f8047300990473008a023900750239003104ac00b8
04ac00b804ac00b804730104081f006f0556ffd70556005905c700ba05c7
005b0556005c04e3005d063900c705c7005602390075040000440556005b
0473005206aa005a05c70064063900bb05560058063900bd05c700600556
009004e300ff05c700c6055600fe078d01000556ffbf055600ef04e30032
0239000d023900ae0239ff8803c100900473ff7e02aa012a0473005a0473
0044040000730473006c0473006a0239005d047300350473004401c7003d
01c7ff080400004601c7003606aa004304730044047300640473ffeb0473
006902aa00440400004e0239007304730080040000a205c7009f0400fffd
040000000400002802ac006b021400bc02acff5404ac00a40556ffd70556
ffd705c700bc0556005c05c70064063900bb05c700c60473005a0473005a
0473005a0473005a0473005a0473005a040000730473006a0473006a0473
006a0473006a0239007d0239007d0239007d0239007d0473004404730064
047300640473006404730064047300640473008004730080047300800473
0080047300ba033301110473009a047300400473003e02cd006d044c008e
04e3004a05e5005305e500530800011802aa015a02aa00ed0464007c0800
ffad063900ae05b4009a0464007c0464007c0464007c0473004b049c000c
03f4003805b4007a069600f1046400000231000002f600a702ec008f0625
00bb071d005704e3009904e300ac02aa007604ac00b8046400540473002e
0464007c04e5001a047300a104730053080001260556ffd70556ffd70639
00bb080000a4078d00810473fffc0800000002aa00d802aa00d601c70108
01c701000464008003f4007804000000055600ef0156fde80473005102aa
006102aa00210400006f0400006f0473000b023900b901c7fff102aaffd8
080000880556ffd70556005c0556ffd70556005c0556005c023900750239
00750239007502390075063900bb063900bb063900bb05c700c605c700c6
05c700c60239007d02aa00cd02aa00c002aa00c902aa00db02aa018e02aa
014802aa004d02aa00b002aa007d02aa01080473001801c7002605560090
0400004e04e3002604000028021400bc05c7005b04730064055600ef0400
0000055600580473ffeb04ac00b804ac010502aa011702aa009802aa00a9
06ac007b06ac00ab06ac00a90473ffe8063900c704730035023900750556
00900400004e05c700ba0400007305c700ba040000730473006c046b00b5
02aa02130556ffd70473005a0556ffd70473005a05c7005b0500007005c7
005b0556005c0473006a0556005c0473006a0473005201c7003604730052
02400038047300560333003905c700640473004405c70064047300440639
00bb0473006405c7006002aa004405c7006002aa0044055600900400004e
04e300ff0239006104e300ff02d5006d05c700c60473008005c700c60473
008004e300320400002804e300320400002804900057063900bb06b200b4
04900066047200620384004504d3006402fe00b00538006f046bff7e0400
007302eb007708c000190800004f040000990800004f040000990800004f
040000980400009807d5016a05c000ee04ac00b804d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505de0075038d003b04eb00650180010402d5010b0715
00b80296001904d5009202d6008302d6008304d500b202d600700556ffd7
0473005a05c700ba0400007305c700ba040000730556005c0473006a0556
005c0473006a0556005c0473006a063900c704730035063900c704730035
063900c70473003505c700560473004405c7005604730044023900750239
007d023900750239007d023900750239007d0239003901c7000104000044
01c7ff080556005b04000046040000460473005201c7ff6e05c700640473
004405c9006204730049063900bb04730064063900bb0473006405c70060
02aaffc7055600900400004e04e300ec0239001805c700c60473008005c7
00c60473008005c700c60473008005c700c604730080078d010005c7009f
055600ef0400000001c700360556ffd70473005a0800ffad071d00570639
00ae04e3009902390128078d010005c7009f078d010005c7009f078d0100
05c7009f055600ef0400000001c7013302aa00990473004004cd005a06ac
007b06ac009406ac009306ac006302aa002602aaffe002aa017b02aa0061
0556ffd4064f006306c50068031c0062065a005706ec00600633001b01c7
ffee0556ffd705560059055effec0556005c04e3003205c7005602390075
0556005b0556ffec06aa005a05c7006405300008063900bb05cc00570556
005804cc002d04e300ff055600ef0556ffbf06a500fd0616000702390075
055600ef04900066038400450471004501c7003d046600960492ffe90400
009e03b50064047100450457008201c7003d0400003c03f0ffcd0462ffe8
040000a203930073047300640495ffe403e4006f04660096045eff6d05d2
009c063b006401c7003d046600960473006404660096063b00640556005c
06be00e7045a005705a900bb055600900239007502390075040000440887
ffea07dc005706c100e504b70057051d00e705ca00570556ffd705350057
05560059045a005705a2ff7f0556005c0756ffb704e9006305b9005705b9
005704b70057057cffeb06aa005a05c70056063900bb05cc005705560058
05c700ba04e300ff051d00e7065c00a40556ffbf05d10057056300db075d
005707620057067100e70717005705350057058d005a082e00570574ffca
0473005a04800076042d006403f2004e046c00640473006a0581ffc503b8
001f047300800473008003c7003f0483ffd8057c003f0467003f04730064
0467003f0473ffeb0400007306aa00430400000006af005f0400fffd0493
007d0424009706a4007906cf007904f8007905e3003f0435003f03ef0035
0604003f0446ffe80473006a047300450306003f03f700610400004e01c7
003d01c7003d01c7ff080748ffd8069f003f0473004503c7003f04000000
0473007d03f0005702b7003f0800005108aa005b055c00ac02aa008b02aa
ffdf02aaffee02aaffee02aa00c202aa003f02aa003f02aa004902aa0049
02aa020c02aaffd102aa017a02aa009f0310013d02aa0196023300ce02aa
041602aa000f023900b9048100690456003203310019041100ed04d100a2
01f9009b030f00ff04ca009b04b800d701f90108041300f503b0005303b4
00fc04ca009b04cf006f01f9004402d2003c049800b8043c001f048800e8
045f007f03b100fb03d4003f0466004f041300f5058e00ee0524002d03f2
009b03f2010803f2010801e300ea035600ea0686009b01f9009b041300f5
041300bc03b4006203b400620448002d058e00ee058e00ee058e00ee058e
00ee0481006904810069048100690456003203310019041100ed04d100a2
024b0078034a008504b800e6024b0099041300f503b0005303b400fc04cf
006f02d2003c049800b8048800e6045f007f03d4003f0466004f041300f5
058e00ee0524002d01f9009b0456003203b00053045f007f049b00830000
ffdc0000ff250000ffdc0000fe510000ffdc0000fe510000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ff160000
ffdc0000ff160000ffdc0000ff200000ffdc047300a408000000067e00bb
04d60064065900c6051200800000fef40000fd410000fdb70000ff580000
fdec0000fe3b0000ff2e0000ff380000fe090000fd760000feb30000fd0e
0000fd660000ffec0000ffc40000fe44041b005606ac007b06ac007b0000
ff6a0000fdb80000feca0000fdc80000ff2d0000fdc70000fced0000fc0e
0000fc0e0000fd140000fc910000fc7c0000fc920000fc460000fc000000
fc460000fbdd0000fef40000ff500000fe7e0000fc6a0000fc950000fdf7
0000fe330000fc990000fcf90000fcef0000fc9f0000fc8b0000fbde0000
fd2c0000fd4b0000fc780000fc6801c7003d0556ffd70473005a0556ffd7
0473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a0556
ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a
0556ffd70473005a0556ffd70473005a0556ffd70473005a0556005c0473
006a0556005c0473006a0556005c0473006a0556005c0473006a0556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0239
007501c7003d0239003801c7ffe8063900bb04730064063900bb04730064
063900bb04730064063900bb04730064063900bb04730064063900bb0473
0064063900bb04730064067e00bb04d60064067e00bb04d60064067e00bb
04d60064067e00bb04d60064067e00bb04d6006405c700c60473008005c7
00c604730080065900c605120080065900c605120080065900c605120080
065900c605120080065900c605120080055600ef04000000055600ef0400
0000055600ef040000000556ffd70473005a0239007501c7003d063900bb
0473006405c700c60473008005c700c60473008005c700c60473008005c7
00c60473008005c700c60473008000000030000000300000003000000030
045a003e0306003c0756ffb70581ffc504b7005703c7003f04b7005703c7
003f05c700560467003f047300ea040000a2047300870400fff40556ffbf
0400fffd056300c6042400810563007504240044063900c1047300760639
00bb04730064000000000000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
0000007400000156000001560000025a0000025a0000025a0000025a0000
025a0000025a0000025a0000025a0000025a0000025a0000025a0000025a
0000025a0000025a0000025a0000025a0000025a0000025a0000025a0000
025a0000025a0000025a0000025a0000025a0000025a0000025a0000025a
0000025a0000025a0000025a000003be000003be000004a4000004a40000
05d4000005d4000005d4000005d4000005d4000005d4000005d4000005d4
000007a0000007a000000880000009e8000009e8000009e8000009e80000
09e800000b3c00000b3c00000b3c00000c9000000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000d7600000d7600000d76
00000d7600000d7600000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000dde00000dde00000dde00000dde0000
0dde00000dde00000dde00000dde00000dde00000dde00000dde00000dde
00000dde00000dde00000dde00000e9e00000e9e00000e9e00000e9e0000
0e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e
00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e0000
0e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e
00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e0000
0e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e
00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e00000e9e0000
0e9e00000e9e00000e9e00000eae00000f7800000f7800000f7800000f78
00000f7800000f7800000f7800000f7800000f7800000f7800000f780000
0f7800000f7800000f7800000f8800000f8800000f9800000f9800000f98
00000f9800000f98000010c0000010c0000010c0000010c0000010c00000
10c0000010c0000011ac000011ac000011ac000011bc000011bc000012aa
000013ae00001484000014940000167c0000178200001792000017c20000
18de000019c200001b2e00001c0c00001c1c00001cca00001cda00001cea
00001cfa00001d0a00001eb600001ec600002020000021020000228a0000
228a0000228a000023a80000246c0000246c000025940000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0000268a0000
268a0000268a0000268a0000268a0000268a0000268a0000268a0000268a
0000268a0000268a0000268a0000268a0000268a0000268a0001000003bc
0100003f005a000500020010002f00550000022a067d000300020000000e
00ae000000030000000000fe0000000000030000000700c400fe00010000
00000000007f01c200010000000000030015024100010000000000040015
025600010000000000060015026b00010000000000070062028000030000
04090001001802e20003000004090002000e02fa0003000004090003002a
03080003000004090004002a03320003000004090006002a035c00030001
0409000000fe0386000300010409000700c4048400540079007000650066
006100630065002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002e00200044006100740061002000a9002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200070006c0063002f005400790070
006500200053006f006c007500740069006f006e007300200049006e0063
002e00200031003900390030002d0031003900390032002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
006500640041007200690061006c00ae002000540072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c00630020007200650067006900730074006500720065
006400200069006e00200074006800650020005500530020005000610074
0020002600200054004d0020004f00660066002e00200061006e00640020
0065006c0073006500770068006500720065002e547970656661636520a9
20546865204d6f6e6f7479706520436f72706f726174696f6e20706c632e
204461746120a920546865204d6f6e6f7479706520436f72706f72617469
6f6e20706c632f5479706520536f6c7574696f6e7320496e632e20313939
302d313939322e20416c6c205269676874732052657365727665644c4244
4d47462b417269616c2d4974616c69634d544c42444d47462b417269616c
2d4974616c69634d544c42444d47462b417269616c2d4974616c69634d54
417269616ca82054726164656d61726b206f6620546865204d6f6e6f7479
706520436f72706f726174696f6e20706c63207265676973746572656420
696e2074686520555320506174202620544d204f66662e20616e6420656c
736577686572652e004c00420044004d00470046002b0041007200690061
006c0052006500670075006c00610072004c00420044004d00470046002b
0041007200690061006c002d004900740061006c00690063004d0054004c
00420044004d00470046002b0041007200690061006c002d004900740061
006c00690063004d0054004c00420044004d00470046002b004100720069
0061006c002d004900740061006c00690063004d00540054007900700065
0066006100630065002000a900200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c0063002e00200044006100740061002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002f00540079
0070006500200053006f006c007500740069006f006e007300200049006e
0063002e00200031003900390030002d0031003900390032002e00200041
006c006c0020005200690067006800740073002000520065007300650072
0076006500640041007200690061006c00ae002000540072006100640065
006d00610072006b0020006f006600200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002000720065006700690073007400650072
0065006400200069006e0020007400680065002000550053002000500061
00740020002600200054004d0020004f00660066002e00200061006e0064
00200065006c0073006500770068006500720065002e0000b1547f411102
a600af02a600bf02a600ef02a60004003002a6004f02a6005f02a6000300
4002a6b28f3340b802a6b25f3340b802a6b34e513280b802a6b34c4d3240
b802a6b340483240b802a6b30a0d3240b802a6b3093a3240b802a6b33033
3280b802a4b345783240b802a4b3323a3280b802a4b32a313240b802a4b3
2425327f411002a4000100ef02a40001000f02a4002f02a4003f02a4007f
02a40004004002a4b3151d3280b802a4b309143240b802a3b31a1b320fbf
02a3007f02a300ef02a30003004002a3400a091432124f064f0702ef4137
01eb0001009f01eb0001007f01eb0001005f01eb0001003f01eb0001002f
01eb0001000f01eb0001007f01ea000100ef01ea000100bf01ea000100af
01ea0001002f01ea0001003f01ea0001004f01ea0001006f01ea0001007f
01ea000101ed01ed01ec01ec01eb01eb01ea01ea4012002c01001f01102c
01101f01402c01401f01b90109010bb2341f91b8010b4037341f2e20431f
3220431f3320471f2c20431f1f20431f7b2a481f2d2a481f212a441f3701
00010100090102000800171700000012110840b801acb7fe870dfd870d00
09b8013fb22a4c1f4109013a00ba0401001f0136001f019a001f0104b22a
721fbe01010020019a001f0100002002abb21ffb2db80156b21ffa1fb808
01b21ff91fb8020140131ff81fe41ff71fbb1ff51f4a1fc92aab1fb92db8
019ab21fb81fb80401b21fa02ab802ab400f1f8b1f521f7b2ae41f781f6c
1f6e20b80401b21f6c21b80401400b1f632aab1f5a2a5a1f5820b802abb2
1f4e20b80156b21f471fb8019ab61f452aab1f442ab80101b61f401f891f
332db80401b21f3221b80401b61f311f721f2e1fb8019ab21f2c1fb80401
b21f291fb80801b21f281fb80801b61f271f6c1f2221b8040140451f550d
090d093790dc0790a80790a607907e07904107903b079036079035079030
07902f07902b07902507901d071408120810080e080c080a080808060804
080208000814b8ffe0402b00000100140610000001000604000001000410
000001001002000001000200000001000002010802004a00b013034b024b
5342014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b
544218b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb002
88b801005458b80119b101018e851bb0124358b900010119858d1bb90001
01ff858d59590016763f183f123e113946443e113946443e113946443e11
3946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b
2b2b2b2b2b2b2b2b2b2b2b4b5079b9001f0158b3071f3d072b2b4b5379b9
00900158b307903d072b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb09353205c58b901ae01ac4544b901ad01ac45445958b9032c01ae45
5258b901ae032c4459594bb8019a53205c58b9003f01ae4544b901ae01ae
45445958b908d6003f455258b9003f08d64459594bb8040153205c58b900
2301ae4544b9002001ae45445958b916200023455258b900231620445959
4bb8040153205c58b9001e01ad4544b9002a01ad45445958b917e0001e45
5258b9001e17e04459594bb8040153205c58b1ba234544b1232345445958
b9162000ba455258b900ba16204459594bb03c53205c58b11f1f4544b121
1f45445958b90102001f455258b9001f01024459594bb04653205c58b11f
1f4544b12d1f45445958b9012e001f455258b9001f012e4459594bb80301
53205c58b11f1f4544b11f1f45445958b90d20001f455258b9001f0d2044
59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b45695342014b5058b108004259435c58
b1080042591610703eb0124358b90d193ea51bba00d203eb000b2b59b00a
2342b00b2342003f3f182b103c012f060cb0062342b0072342b0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b0112342002b2b2b2b2b2b2b2b2b2b2b7474
757575750018456944456944456944456944737373737373737375737373
7373737374004bb02a534bb03f515a58b1070745b040604459004bb03053
4bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03c515a58b10303
45b040604459004bb02e534bb03c515a58b1090945b8ffc0604459435c58
b64f2c014f1f01372b7474592b732b2b2b7373742b2b2b2b2b2b2b2b2b2b
2b2b74732b00000000>
[9867 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 116 36 <0002ffd7000004ef05ba0007000e00a04046080606020608080705090a0c
0406080e0c0c0706080f0509100c970c0102200100001e070c1407070c02
0c04041e03021403030201070f04030203100cfb0201020908210506b801
bb400e07070404030300080ca90f8382182b1910f400183f3c103c103c10
f43cfd3c3f3ced01111739113939872e2b877dc4872e182b7d10c42b1112
393912393987100ec405c4c4870ec405c4c407103c8710c4313023013313
230321030121032627060729033fe7f2be47fdafeb013f01e53921083260
05bafa4601a6fe5a023d0170db927ead>PBAAAA+Arial-ItalicMT AddT42Char 
1 3742 570 <ffffffd7000004ef05ba021600240000>PBAAAA+Arial-ItalicMT AddT42Char 
1 3216 92 <00010000fe51047d04260014009840532016300b400c4016870a05090c0b
0d1609170a2a0b380d060808090d0e0e0700011500130108030f10103307
0e1407070e0d0e0a0710030d080f0e0e0a0a0906080a0320130f0f58100e
01100e010e0a580901ba029200150103b18c182b10e42fed2f5d72ed003f
ed3f3f3c103c103c123911393901111239870e2e2b057d10c40011123912
3901111239871004c4083c313001715d1137163332373637370333131617
013301060623220b383537222c343ab1b250181101dbbdfd5b6298633ffe
66aa1019215b680429fde79f9f0357fb4db07200>PBAAAA+Arial-ItalicMT AddT42Char 
1 7418 621 <ffff0000fe51047d04260216005c0000>PBAAAA+Arial-ItalicMT AddT42Char 
1 1492 80 <0001004300000680043e002a0149403d4611012c40090a349f2cbb23bf2c
cf17c923e7020699179923ae16ae22af2cbb1706450e5608550e5712660e
7f2c0609012208220e3508330e4608062cb8ffc0404f0d103403292a0202
2a2a23000114012010397401010000011d1e1e231f201420201039742001
1f1f200f12122313141414201039741401131314251f06191f0c0c060702
2801062a1f1e1328000a2cb801d2400d140f0912581410001310130213b8
016b400d1f1d101e582010001f101f021fb8016b401f0002102a5801102f
003f004f005f000400562b01100020101f141013563e182b2f2b3c012f2b
3c012f2b3c014e10f45d2b3c014dfd2b3c0110f45d2b3c01fd2b3c0110f4
5d2b3c01fd2bc40110e4003f2b3c3c3c3c003f2b3c003f3c10ed10ed0587
2e5d2b2b0e7d10c405872e185d2b2b0e7d10c405872e185d2b2b7d10c407
0e3c3c3130012b5d5d5d5d2b5d3313330736363332161736363332161514
070323133635342623220606070323133635342623220606070343deb525
659f5d63851551b3638585178fb59213423c51a85d236cb5961041344da9
6a22690426af7156695e64637e723171fd5402be5625343c629fa5fdfd02
cd491f344062afa2fe0a>PBAAAA+Arial-ItalicMT AddT42Char 
1 7402 620 <ffff004300000680043e021600500000>PBAAAA+Arial-ItalicMT AddT42Char 
1 1188 72 <0002006affe80441043e0019002200c0b90021ffe040091011341f201011
3416b8ffe040580e1134090628228b188b19041819471a020700b519c519
0326032c0b771a871a040020101134001b1a00031201110f1d0024100160
01020001100150016001040153041b1a2c119012a01202121204201f0c07
171f040b12b80292401b14200826231d200f40172034000f100f700fdf0f
040f3e24263e182b4e10f65d2b4ded4e10f44dfde4003fed3fed12392f5d
3cfd3c10fd5d71e40111123939121739c92b3130015d72715d2b2b2b0117
060423222626353412243332161514072106151416333236012136353426
2322060350b026feefbd76c567a1010095bee30efcf20489635db4fe2402
5401886b74bf01691283ec6dd085ae01479feccc4e521f19959d7a017a1c
0c8891a0>PBAAAA+Arial-ItalicMT AddT42Char 
1 5252 607 <ffff006affe80441043e021600480000>PBAAAA+Arial-ItalicMT AddT42Char 
1 6958 615 <0001003f000004710426000b00a940533609460902030804070209010a05
060623070414070704010a0a230b00140b0b00021f0909010a0504010006
06070a0b0a05040601000a010b047004020b007000020407000b103f0701
07400d0f3410070107b8027d400d0d0b400b0e340b560c07170b172b2b10
e62b10ed5d2b712b103c103c5d5d0111331133321133003f3c3c3c3f3c3c
3c1112392fed87052e2b7d10c4872e182b7d10c401111239391112393931
30015d0133032113330323132103230122b36001ed5eb1e0b466fe1566b3
0426fe4501bbfbda01dbfe25>PBAAAA+Arial-ItalicMT AddT42Char 
1 2536 88 <00010080ffe804760426001900fe407519081909950bb607b60ae715e518
0709080909840c86189507950aab03a90608270a37187607760a740c7518
062c012f103911491104151918171723161914164010397f160116161909
0c0c23050814083010397208010505080008191609081706280f1f020b19
180a051a281619080510175816b801ba400f18583f190110194f195f196f
190419b8027db31b095808b801b7401c0c20300501d005e005f005032f05
3f05020519170517051a0a38c1182b2b103c2b2b4e2f5d71724dedf4ed10
f45d71edf4ed2b103c103c2b10c0003f3c3fed2b3f3c3c3c00111239870e
2e5d2b2b057d10c4872e5d2b182b7d10c40e10c43130005d015d5d5d2506
2322263534371333030615141633323636373637133303230319bfc87b97
2280b58e1249474c916921161d60b5dea7c0d88d6643a30265fd59552f3c
434a7e56378a01cbfbda>PBAAAA+Arial-ItalicMT AddT42Char 
1 6018 610 <ffff0080ffe804760426021600580000>PBAAAA+Arial-ItalicMT AddT42Char 
1 7434 622 <0003005ffe69069605ba001b002800350104b9001afff0b31011341bb8ff
f0b61011348b25011db8ffe0b310113431b8ffe0b310113401b8ffe0b30f
113409b8ffccb30e11341cb8ffe040090c1134212009113427b8ffccb309
11342db8ffe04051091134191c0e030d1a00290b030c1b0d1a1a231b0c14
1b1b0c00190b0e042c320d0c02261f10102c1f08061f1f1616321f020b1a
1b0e0d0c1a700c011b36280c106f1b011b1b050923206f130170130113b8
ffc04010090a341373372f200526361b171b360a2b103c2b10f6ed10f62b
5d71ed2b1239012f5d2b3c2b10c05d01321133003f3c3fed3c10ed3fed3c
10ed3f3c1112173987052e2b7d10c40111121739111217393130012b2b2b
2b2b2b2b2b5d2b2b25062322263510003332161713330336333216151000
232226270323011416333236123534262322022734262322021514163332
361202c7759e90c5012bd1609b1976b06a72a584d0fed4cf6b911b79b301
657b56589c5e705a9cbd847a588ec46f5c66a2517088dec2010f01a76943
0228fdf78dced2feeffe5b7042fdcf0305718897011c857685fe82867088
fea2d97785b5012a>PBAAAA+Arial-ItalicMT AddT42Char 
1 6082 612 <0001003f000004290426001d00b7406d021b1c1c01141917172316141416
16144b0f010620101134121914060f0516011c1c231d00141d1d000f060b
0212141917021f901ba01b021b1b011c0b1f0a0a01000616171c1d0a0b0a
0a171601001c700001001d1000167016b01603165f1d012f1d3f1d4f1d03
1d561e1d172b10e65d5d2f5d2b103c5d013211331133332f33003f3c3c3c
3f3c3c10ed1112392f5ded123939391112393987052e2b7d10c401121739
2b71872e182b870e7dc48705103cc4313001330317323637363633330723
22060706060716161713230326262303230128b165204b5e575a7d6a5421
2b4333324466504351267cbb6438605c6cb30426fe3a014d8f9358912456
76651d1a6264febd010a9454fe0e>PBAAAA+Arial-ItalicMT AddT42Char 
1 602 68 <0002005affe80436043e0027003500c140515b2d01250a250b230c252c3a
014a01062f0839085721672104342c2a0b042f28260d030f00251e23282b
03130d0a321a282b2b2c0a0d140a0a0d16241f17011752131f1a07260a32
1f030b17580f160116b801c3401e2f200626360f201e0058102370230223
ff1e40111234001e101e6f1e031ebc027800370026027800182b4e10e65d
2b4df65ded10ed4e10f44dfdf65ded003fed3f3fedfd5de4870e2e2b0e7d
10c400111239391112393901111239111217391217393130015d005d5d25
060623222635343636373624373635342726232206072736363332171615
140703061514172326130606070e021514163332363603105eae6393b451
86613d01554a152e3f79729121b738f3b9c57358193b1c16b70f3d265766
9e824269615aa66084514bad87598953120c0e1d4a313f2432655d109ea8
5e46705570fef87e4f325e3401e60f10090e2b5e394c625faa00>PBAAAA+Arial-ItalicMT AddT42Char 
1 4524 602 <ffff005affe80436043e021600440000>PBAAAA+Arial-ItalicMT AddT42Char 
1 7878 624 <0001007dfecb04720426002300ebb5841484150214b8fff0408c12153459
0b6605021314142c1516141515160f0d0d230c1b140c0c1b010303232200
142222001b0f220304070d0c01000613121f160b071f1e0b141515141613
04251b0d0c0f1b0100036f0c7b0c7016036f007b00023f003f0c02221b24
280c1b0022105f1b6f1b701b03101b3f1b901b031b1b252f225f22702203
3f224f226f2203221b1722171b22240a2b103c3c2b2b2f5d5d11332f5d5d
2b103c103c2b10c0c05d5d5d013211331133113311121739002f3c3fed3f
fd3c3f3c3c3c121739870e2e2b057d10c4872e182b0e7d10c487052e182b
7d10c43130015d2b71013303061514163332363637133303061514333303
2313222635343707062322263534370121b38e16494953a7693166b6a319
43796197424e64011fb4b27396160426fd6d66373c3d5c96e001d7fd0e73
0c37fe4d01225049101a1dab86793968>PBAAAA+Arial-ItalicMT AddT42Char 
1 9620 633 <0002ffe80000045704260014001e009040411e031502070909230a0c140a
0a0c00010123021514020215070c0a0d1e1f030302151f00060102090a0d
19070c0a0015010b15701502151002400d0f3410020102b8027d400c2019
20101009100a010a02172b2f5d33332fed10fd5d2b2b3c5d013211331139
391139002f3c3c3c3fed11392fed3912393987052e2b7d10c4872e182b0e
7d10c4011112393931300103231323220606070323133637262635343636
33172322061514161633330457e8b25e3c71486c2dc9dcca6873717269b5
beffface5d3a4e5ff40426fbda01ba0e503ffee3010e8c2f1e876a5ba54e
8f71433a4f12>PBAAAA+Arial-ItalicMT AddT42Char 
1 6594 614 <0001003f000005890426000c012f401d094012133476090109200b0d3402
200b0b3403201213340320090b3401b8ffc0b312133401b8ffc040090b0e
340401f9010208b8ffe0b30d143408b8ffe04066090a34030708082c0203
14020203010a09092c020114020201030708060901020a02060b10040505
230607140606070a0b0b230c00140c0c00020a07030c0403010006050608
090b0c0a0407050a000b0c0b077207020b007000020706000c1006400d0f
3406b8027d400d0e0c400b0e340c560d06170c172b2b10e62b10e42b2b10
3c103c5d5d0111331133321133003f3c3c3c3c3c3f3c3c3c12173987052e
2b047d10c487052e182b7d10c42b1112391112393911391139872e182b87
7dc4872e182b877dc4b10602435458400d16021b0a24022b0a84028b0a06
005d593130012b2b5d2b2b2b2b2b2b5d2b01211301210323130123030323
0123010d6401ed0108e3b3b9fe0ea169beb30426fcb1034ffbda0358fca8
0379fc87>PBAAAA+Arial-ItalicMT AddT42Char 
1 1952 82 <00020064ffe80452043e000e00200078b90011ffe040530e11341b200e11
34270901602270220206051b15141e0359145a15561e561f6f15601f0643
0501741076147b1a7a1eb403051c1f0407121f0b0b0f2000402d2f340026
211920000710077007030773222665182b4e10f65d4ded4e10f42b4ded00
3fed3fed3130005d71015d5d715d2b2b1310373633321615140204232226
2637141633323e02373635342623220e0264b797f5c0eb94feef977ccb6b
b5906f3a726245151f916e558c713501930137cca8f0ccb7fec5a86ac291
969b2f607b47635b909f519ccf00>PBAAAA+Arial-ItalicMT AddT42Char 
1 7180 616 <ffff0064ffe80452043e021600520000>PBAAAA+Arial-ItalicMT AddT42Char 
1 5038 606 <00020064ffe8046105d3001600220061b90019ffd640090e113414200d11
3421b8ffd6402f09113411201a001f0101201f0e071a1f080b1d200c1134
111d206f05010005100570050305732400010117200b262310f6ed332f33
10f65d71fd392b003fed3fed3fed1112393130012b2b2b01373332121110
0021222635100033321617342e022301141633321235342623220201c822
83fbf9fecffee3b9f60150ea66922c1b5c8e80fedc8679afd48476b4d405
369dfefafee7fe3afdfae0db011801835b5c8b86702ffc6481a00151c27c
a6feb400>PBAAAA+Arial-ItalicMT AddT42Char 
1 4288 599 <0001005affe7057f05d3001c0080400b1b2a0b1134052a0a113407b8ffd6
b30b113418b8ffcc403b0b1134090808060115161619012d000019062d0c
03192d12091c200f1134021c01000016032a300f01800f010f511e082a09
09162a1f152f1502152f5ded332fed10f45d71ed11392f3339392b003fed
3fed11392fed12392f391112392f393130012b2b2b2b0137213534262320
032736243320001110002120002737161633320013028a26020de9a3fed9
8aaf560148d00103013dfe56feaafefdfeec0eb80ebfa3bc012944029dae
23e0e1fecc2ebfebfebafed5fe8dfdf80129bc34b0cd010e010c>PBAAAA+Arial-ItalicMT AddT42Char 
1 3992 592 <00010057fedc061305ba000b00f0405e1f0a1f0b021f061f0702740a740b
027406740702010202210304140303040b00001e090a1409090a0708081e
0506140505060b0a07060202030100090821040508010402030b0a000706
08059006900a025006500a021f0a700ae00a0306b8ffe0401e101034e006
011f06590670060309030c2804030a09060510020330090109b8028a4013
0d0f052f050205460c03170917051703090c0a2b103c3c2b2b2b10e65d10
f45d322f2b103c103c103c2b10c0c05d5d2b5d7172011133113332113311
331133003f3cfd3c3c3c2f3c3f3c3c3c87052e2b7d10c4872e182b7d10c4
872e182b7d10c43130015d5d5d5d25330323132101330121013304ff8961
a740fb970139c4feea02fe0113c4a6fe36012405bafaec051400>PBAAAA+Arial-ItalicMT AddT42Char 
1 3550 518 <000100570000060905ba00070093404b0203031e0405140404050607071e
000114000001030407000805062102010202050306010700900190050250
01500502e001e0050274017405025606011f011f05020504010010300401
04b8028a400d090f002f0002004608041700172b2b10e65d10e45d2b103c
103c5d5d5d5d71720111331133321133003f3cfd3c3f3c3c3c87052e2b7d
10c4872e182b7d10c431303301210123012101570133047ffecec40115fd
08feeb05bafa460513faed00>PBAAAA+Arial-ItalicMT AddT42Char 
1 3960 585 <ffff00570000060905ba021602060000>PBAAAA+Arial-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>PBAAAA+Arial-ItalicMT AddT42Char 
PBAAAA+Arial-ItalicMT /CharStrings get begin
/g570 570 def
/g621 621 def
/g620 620 def
/g607 607 def
/g615 615 def
/g610 610 def
/g622 622 def
/g612 612 def
/g602 602 def
/g624 624 def
/g633 633 def
/g614 614 def
/g616 616 def
/g606 606 def
/g599 599 def
/g592 592 def
/g585 585 def
end
PBAAAA+Arial-ItalicMT /Encoding get
dup 32 /g570 put
dup 33 /g621 put
dup 34 /g620 put
dup 35 /g607 put
dup 36 /g615 put
dup 37 /g610 put
dup 38 /g622 put
dup 39 /g612 put
dup 40 /g602 put
dup 41 /g624 put
dup 42 /g633 put
dup 43 /g614 put
dup 44 /g616 put
dup 45 /g606 put
dup 46 /g599 put
dup 47 /g592 put
dup 48 /g585 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JEXDFS+Arial-ItalicMT /PBAAAA+Arial-ItalicMT findfont ct_VMDictPut
/JEXDFS+Arial-ItalicMT*1 
[32{/.notdef}rp /g570 /g621 /g620 /g607 /g615 /g610 /g622 
/g612 /g602 /g624 /g633 /g614 /g616 /g606 /g599 
/g592 /g585 207{/.notdef}rp]
JEXDFS+Arial-ItalicMT nf
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
80.6246 87.6371 mo
( !"#$"%&%'\(\)%*)
[3.98038 2.97746 4.97717 3.38577 3.27774 4.97717 3.38577 4.97726 3.31374 2.87537 3.31375 3.40987 
3.38577 0 ]xsh
80.6246 94.8555 mo
(+#",-,+)
[4.09868 3.31796 4.98138 3.38403 3.32391 3.31796 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.078 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Arial-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f329c9692a9000000cc000000566376
74203bf221cb000001240000054e6670676d54bf6d3600000674000005ce
676c79665af367640000371c000001ce68656164c4f09a1e00000c440000
0036686865610c0f083600000c7c00000024686d74780c3f063800000ca0
00000ef06c6f63610006967800001b9000000ef46d6178700693080a0000
2a84000000206e616d65b13c5b3900002aa4000005f67072657082b00638
0000309c0000067d67646972000000000000000000000000000103880190
00050000059a0533001e011b059a0533005a03d1006602120805020b0604
02020209020400000a870000000000000000000000004d6f6e6f00010020
fffc05d3fe570133073e01b2400001bfdff70000000005ba001905ba0019
05a6001a042600180000ffe70000ffe80000ffe7fe69ffee05ba0019fe6f
ffe202e2000000b5000000b5000000000000000000bc00bf008c00b300a6
00a600b10010010400640079008b008b00c100ea008a00a2009101b40073
007a00a400a200bb01bd0270005a00800017007000c300300103ffd000ac
007d010d0006001200c900cd00560091ff8f0113000b00190043007200b9
03c803d7ffee0146016e0002001b0044005200b603ee00d80104023d0518
0573ff2d0005000900c600cd024cffe70011001500370049004e005c00a6
00a700b500c500db01280543ffdf00210040005300700079008e00a300ca
018f0265027502a403c80555ff9affd7ffee000500080026004600690070
00730077009a00c100ef010a011301c101e50318049cfef2fef9ffa40000
00270034004100450075008000c400cb00d900e500f801550166022b0254
037004050467ff16ffb40002001d0032004a004a004d00550060007c007f
008c009d00b102a3038cfec4fef7000100030003002d00370037003a0056
005a00a400cd00da011101190125012701480153016901a001fb02070239
028102a402f7030503280328033603a303b503dd03df03f10448047804e6
060bff28ff4bff68ff78ff9fffbfffe10012001f0028004c005a005c005e
00610070007700810083008800b1009c009c009d009f00a500b600b800b9
00ba00d300df00e100f200f7010e0132013b013c0166016c017801ae01b5
01b701cf01d2025d026102a202cd0323035a03a303a40400044404500473
04d2fe00fe38fe8cfeb1feceff0effb2ffc7ffecfffd0005001f00210025
0026002d00580065008100850091009900a500ab00af00b000b000ba00db
00dc00e900f80109010901100114011701240129012d012f013601500151
015a0167017401790182018e01900199019c01b001b301b701be01c501da
01e801f001f201fb02000200020b020f021f0222022c022d022e024e0267
0287029002ac02b502bc02bc02d002d402d802db02e502f102f903110314
0314032203260348034a035c036f03780379037e03ab03b503cb03e00404
0405040f0428042c048404a504af04cf04eb04f9050b058e0593059805e5
05e506000610063d06500668069506b806d9070307510766077e077f0782
07b60800082308ac00b200bf00b100af000000000000000000000000025c
00a100d301be00de01a6031402ab015002a70196010e0318006b039b01d1
054b0089023c02b0014d021603f301760176001503a901f400f400b60204
02d8012b04a701a000bc01bd028c026b0278040f015704a904fd017404d2
040302e400a602ee00000000061404a7000002760000016d013e00000267
006d009e021400cb02a40085007100c2009e0609029000b9008f00260248
003501490091009902ef00eb008e0011013f006a007900fd01a3057402a1
017a03e8020c005601fd02df013b057400660610008101b3024e03cb01e4
00cd02bc0132014b01680239016200fd00e601a201e60255004d028300a3
046705d401dd012b014e05680070000004e003490366021302bb00000000
00000000000000000000000000af00b4000300cd004c03c8005c01920072
00cd022b0049026f009d03bd01e900b4017c046703680099027802040183
028102ac00b30348040b004200b403b400be01a803d6012b00af0478016e
0193ff45fd5d00f506a604ae03b10536041cffcafedc01a501d0ffba02f1
0037ffca0355fe67019c04190055007c00e50072006d000b00ab012b009c
00db01a60008012b00250056008e00a500150010010900cb00460017004c
005e01f200b80083001101360128004e0222006b02410720061400000727
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c
482d2c01182f2d2c20b0032545b019234445b01a23444565234520b00325
606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe000
1a45208a54582321b03f1b235961441cb114008a5279b31940201945208a
54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d
2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2c
b11011432343650b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c4bb06451584569b00943608a103a1b212121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c
352d2c76b8023623701020b802364520b0005058b00161593a2f182d2c21
210c6423648bb84000622d2c21b08051580c6423648bb82000621bb20040
2f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2cb4000100000015b00826b008
26b00826b008260f10161345683ab001162d2cb4000100000015b00826b0
0826b00826b008260f1016134568653ab001162d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb01343
58021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb004
25b00425060c6423646164b807085158b00425b00425012046b010604820
46b0106048590a21211b2121592d2cb012435c580cb00425b00425060c64
23646164b807085158b00425b00425012046b8fff060482046b8fff06048
590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b
515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d
2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46
2346608a8a462320468a608a61b8ff8062232010238ab902a502a58a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042
b123018851b1400188535a58b910000020885458b202010243604259b124
01885158b920000040885458b202020243604259b12401885458b2022002
436042004b014b5258b2020802436042591bb940000080885458b2020402
43604259b94000008063b80100885458b202080243604259b94000010063
b80200885458b2021002436042595959592d0000000100000002e66732ef
15885f0f3cf50819080000000000a372c2bf00000000b5c9a697fbddfd67
08a707fb00000009000100010000000000010000073efe4e004308c0fbdd
fd4b08a70021000700000000000000000000000003bc0600010000000000
02390000023900000239007302d7010b0473005f04730069071d00c70556
00a10187010402aa00ad02aaff93031d00ec04ac00b80239003102aa005f
023900760239ff98047300910473012f04730078047300700473005d0473
008e047300ab047300f8047300990473008a023900750239003104ac00b8
04ac00b804ac00b804730104081f006f0556ffd70556005905c700ba05c7
005b0556005c04e3005d063900c705c7005602390075040000440556005b
0473005206aa005a05c70064063900bb05560058063900bd05c700600556
009004e300ff05c700c6055600fe078d01000556ffbf055600ef04e30032
0239000d023900ae0239ff8803c100900473ff7e02aa012a0473005a0473
0044040000730473006c0473006a0239005d047300350473004401c7003d
01c7ff080400004601c7003606aa004304730044047300640473ffeb0473
006902aa00440400004e0239007304730080040000a205c7009f0400fffd
040000000400002802ac006b021400bc02acff5404ac00a40556ffd70556
ffd705c700bc0556005c05c70064063900bb05c700c60473005a0473005a
0473005a0473005a0473005a0473005a040000730473006a0473006a0473
006a0473006a0239007d0239007d0239007d0239007d0473004404730064
047300640473006404730064047300640473008004730080047300800473
0080047300ba033301110473009a047300400473003e02cd006d044c008e
04e3004a05e5005305e500530800011802aa015a02aa00ed0464007c0800
ffad063900ae05b4009a0464007c0464007c0464007c0473004b049c000c
03f4003805b4007a069600f1046400000231000002f600a702ec008f0625
00bb071d005704e3009904e300ac02aa007604ac00b8046400540473002e
0464007c04e5001a047300a104730053080001260556ffd70556ffd70639
00bb080000a4078d00810473fffc0800000002aa00d802aa00d601c70108
01c701000464008003f4007804000000055600ef0156fde80473005102aa
006102aa00210400006f0400006f0473000b023900b901c7fff102aaffd8
080000880556ffd70556005c0556ffd70556005c0556005c023900750239
00750239007502390075063900bb063900bb063900bb05c700c605c700c6
05c700c60239007d02aa00cd02aa00c002aa00c902aa00db02aa018e02aa
014802aa004d02aa00b002aa007d02aa01080473001801c7002605560090
0400004e04e3002604000028021400bc05c7005b04730064055600ef0400
0000055600580473ffeb04ac00b804ac010502aa011702aa009802aa00a9
06ac007b06ac00ab06ac00a90473ffe8063900c704730035023900750556
00900400004e05c700ba0400007305c700ba040000730473006c046b00b5
02aa02130556ffd70473005a0556ffd70473005a05c7005b0500007005c7
005b0556005c0473006a0556005c0473006a0473005201c7003604730052
02400038047300560333003905c700640473004405c70064047300440639
00bb0473006405c7006002aa004405c7006002aa0044055600900400004e
04e300ff0239006104e300ff02d5006d05c700c60473008005c700c60473
008004e300320400002804e300320400002804900057063900bb06b200b4
04900066047200620384004504d3006402fe00b00538006f046bff7e0400
007302eb007708c000190800004f040000990800004f040000990800004f
040000980400009807d5016a05c000ee04ac00b804d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505de0075038d003b04eb00650180010402d5010b0715
00b80296001904d5009202d6008302d6008304d500b202d600700556ffd7
0473005a05c700ba0400007305c700ba040000730556005c0473006a0556
005c0473006a0556005c0473006a063900c704730035063900c704730035
063900c70473003505c700560473004405c7005604730044023900750239
007d023900750239007d023900750239007d0239003901c7000104000044
01c7ff080556005b04000046040000460473005201c7ff6e05c700640473
004405c9006204730049063900bb04730064063900bb0473006405c70060
02aaffc7055600900400004e04e300ec0239001805c700c60473008005c7
00c60473008005c700c60473008005c700c604730080078d010005c7009f
055600ef0400000001c700360556ffd70473005a0800ffad071d00570639
00ae04e3009902390128078d010005c7009f078d010005c7009f078d0100
05c7009f055600ef0400000001c7013302aa00990473004004cd005a06ac
007b06ac009406ac009306ac006302aa002602aaffe002aa017b02aa0061
0556ffd4064f006306c50068031c0062065a005706ec00600633001b01c7
ffee0556ffd705560059055effec0556005c04e3003205c7005602390075
0556005b0556ffec06aa005a05c7006405300008063900bb05cc00570556
005804cc002d04e300ff055600ef0556ffbf06a500fd0616000702390075
055600ef04900066038400450471004501c7003d046600960492ffe90400
009e03b50064047100450457008201c7003d0400003c03f0ffcd0462ffe8
040000a203930073047300640495ffe403e4006f04660096045eff6d05d2
009c063b006401c7003d046600960473006404660096063b00640556005c
06be00e7045a005705a900bb055600900239007502390075040000440887
ffea07dc005706c100e504b70057051d00e705ca00570556ffd705350057
05560059045a005705a2ff7f0556005c0756ffb704e9006305b9005705b9
005704b70057057cffeb06aa005a05c70056063900bb05cc005705560058
05c700ba04e300ff051d00e7065c00a40556ffbf05d10057056300db075d
005707620057067100e70717005705350057058d005a082e00570574ffca
0473005a04800076042d006403f2004e046c00640473006a0581ffc503b8
001f047300800473008003c7003f0483ffd8057c003f0467003f04730064
0467003f0473ffeb0400007306aa00430400000006af005f0400fffd0493
007d0424009706a4007906cf007904f8007905e3003f0435003f03ef0035
0604003f0446ffe80473006a047300450306003f03f700610400004e01c7
003d01c7003d01c7ff080748ffd8069f003f0473004503c7003f04000000
0473007d03f0005702b7003f0800005108aa005b055c00ac02aa008b02aa
ffdf02aaffee02aaffee02aa00c202aa003f02aa003f02aa004902aa0049
02aa020c02aaffd102aa017a02aa009f0310013d02aa0196023300ce02aa
041602aa000f023900b9048100690456003203310019041100ed04d100a2
01f9009b030f00ff04ca009b04b800d701f90108041300f503b0005303b4
00fc04ca009b04cf006f01f9004402d2003c049800b8043c001f048800e8
045f007f03b100fb03d4003f0466004f041300f5058e00ee0524002d03f2
009b03f2010803f2010801e300ea035600ea0686009b01f9009b041300f5
041300bc03b4006203b400620448002d058e00ee058e00ee058e00ee058e
00ee0481006904810069048100690456003203310019041100ed04d100a2
024b0078034a008504b800e6024b0099041300f503b0005303b400fc04cf
006f02d2003c049800b8048800e6045f007f03d4003f0466004f041300f5
058e00ee0524002d01f9009b0456003203b00053045f007f049b00830000
ffdc0000ff250000ffdc0000fe510000ffdc0000fe510000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ff160000
ffdc0000ff160000ffdc0000ff200000ffdc047300a408000000067e00bb
04d60064065900c6051200800000fef40000fd410000fdb70000ff580000
fdec0000fe3b0000ff2e0000ff380000fe090000fd760000feb30000fd0e
0000fd660000ffec0000ffc40000fe44041b005606ac007b06ac007b0000
ff6a0000fdb80000feca0000fdc80000ff2d0000fdc70000fced0000fc0e
0000fc0e0000fd140000fc910000fc7c0000fc920000fc460000fc000000
fc460000fbdd0000fef40000ff500000fe7e0000fc6a0000fc950000fdf7
0000fe330000fc990000fcf90000fcef0000fc9f0000fc8b0000fbde0000
fd2c0000fd4b0000fc780000fc6801c7003d0556ffd70473005a0556ffd7
0473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a0556
ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a
0556ffd70473005a0556ffd70473005a0556ffd70473005a0556005c0473
006a0556005c0473006a0556005c0473006a0556005c0473006a0556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0239
007501c7003d0239003801c7ffe8063900bb04730064063900bb04730064
063900bb04730064063900bb04730064063900bb04730064063900bb0473
0064063900bb04730064067e00bb04d60064067e00bb04d60064067e00bb
04d60064067e00bb04d60064067e00bb04d6006405c700c60473008005c7
00c604730080065900c605120080065900c605120080065900c605120080
065900c605120080065900c605120080055600ef04000000055600ef0400
0000055600ef040000000556ffd70473005a0239007501c7003d063900bb
0473006405c700c60473008005c700c60473008005c700c60473008005c7
00c60473008005c700c60473008000000030000000300000003000000030
045a003e0306003c0756ffb70581ffc504b7005703c7003f04b7005703c7
003f05c700560467003f047300ea040000a2047300870400fff40556ffbf
0400fffd056300c6042400810563007504240044063900c1047300760639
00bb04730064000000000000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
00740000007400000074000000ec000000ec000000ec000000ec000000ec
000000ec000000ec000000ec000000ec000000ec000000ec000000ec0000
00ec000000ec000000ec000000ec000000ec000000ec000000ec000000ec
000000ec000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce000001ce0000
01ce000001ce000001ce000001ce000001ce000001ce000001ce000001ce
000001ce000001ce000001ce000001ce000001ce000001ce0001000003bc
0100003f005a000500020010002f00550000022a067d000300020000000e
00ae000000030000000000fe0000000000030000000700c400fe00010000
00000000007f01c200010000000000030015024100010000000000040015
025600010000000000060015026b00010000000000070062028000030001
0409000000fe02e20003000104090001001803e00003000104090002000e
03f80003000104090003002a04060003000104090004002a043000030001
04090006002a045a000300010409000700c4048400540079007000650066
006100630065002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002e00200044006100740061002000a9002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200070006c0063002f005400790070
006500200053006f006c007500740069006f006e007300200049006e0063
002e00200031003900390030002d0031003900390032002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
006500640041007200690061006c00ae002000540072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c00630020007200650067006900730074006500720065
006400200069006e00200074006800650020005500530020005000610074
0020002600200054004d0020004f00660066002e00200061006e00640020
0065006c0073006500770068006500720065002e547970656661636520a9
20546865204d6f6e6f7479706520436f72706f726174696f6e20706c632e
204461746120a920546865204d6f6e6f7479706520436f72706f72617469
6f6e20706c632f5479706520536f6c7574696f6e7320496e632e20313939
302d313939322e20416c6c205269676874732052657365727665644c4244
4d49462b417269616c2d4974616c69634d544c42444d49462b417269616c
2d4974616c69634d544c42444d49462b417269616c2d4974616c69634d54
417269616ca82054726164656d61726b206f6620546865204d6f6e6f7479
706520436f72706f726174696f6e20706c63207265676973746572656420
696e2074686520555320506174202620544d204f66662e20616e6420656c
736577686572652e00540079007000650066006100630065002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002e0020
0044006100740061002000a900200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c0063002f005400790070006500200053006f006c0075
00740069006f006e007300200049006e0063002e00200031003900390030
002d0031003900390032002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064004c00420044004d
00490046002b0041007200690061006c0052006500670075006c00610072
004c00420044004d00490046002b0041007200690061006c002d00490074
0061006c00690063004d0054004c00420044004d00490046002b00410072
00690061006c002d004900740061006c00690063004d0054004c00420044
004d00490046002b0041007200690061006c002d004900740061006c0069
0063004d00540041007200690061006c00ae002000540072006100640065
006d00610072006b0020006f006600200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002000720065006700690073007400650072
0065006400200069006e0020007400680065002000550053002000500061
00740020002600200054004d0020004f00660066002e00200061006e0064
00200065006c0073006500770068006500720065002e0000b1547f411102
a600af02a600bf02a600ef02a60004003002a6004f02a6005f02a6000300
4002a6b28f3340b802a6b25f3340b802a6b34e513280b802a6b34c4d3240
b802a6b340483240b802a6b30a0d3240b802a6b3093a3240b802a6b33033
3280b802a4b345783240b802a4b3323a3280b802a4b32a313240b802a4b3
2425327f411002a4000100ef02a40001000f02a4002f02a4003f02a4007f
02a40004004002a4b3151d3280b802a4b309143240b802a3b31a1b320fbf
02a3007f02a300ef02a30003004002a3400a091432124f064f0702ef4137
01eb0001009f01eb0001007f01eb0001005f01eb0001003f01eb0001002f
01eb0001000f01eb0001007f01ea000100ef01ea000100bf01ea000100af
01ea0001002f01ea0001003f01ea0001004f01ea0001006f01ea0001007f
01ea000101ed01ed01ec01ec01eb01eb01ea01ea4012002c01001f01102c
01101f01402c01401f01b90109010bb2341f91b8010b4037341f2e20431f
3220431f3320471f2c20431f1f20431f7b2a481f2d2a481f212a441f3701
00010100090102000800171700000012110840b801acb7fe870dfd870d00
09b8013fb22a4c1f4109013a00ba0401001f0136001f019a001f0104b22a
721fbe01010020019a001f0100002002abb21ffb2db80156b21ffa1fb808
01b21ff91fb8020140131ff81fe41ff71fbb1ff51f4a1fc92aab1fb92db8
019ab21fb81fb80401b21fa02ab802ab400f1f8b1f521f7b2ae41f781f6c
1f6e20b80401b21f6c21b80401400b1f632aab1f5a2a5a1f5820b802abb2
1f4e20b80156b21f471fb8019ab61f452aab1f442ab80101b61f401f891f
332db80401b21f3221b80401b61f311f721f2e1fb8019ab21f2c1fb80401
b21f291fb80801b21f281fb80801b61f271f6c1f2221b8040140451f550d
090d093790dc0790a80790a607907e07904107903b079036079035079030
07902f07902b07902507901d071408120810080e080c080a080808060804
080208000814b8ffe0402b00000100140610000001000604000001000410
000001001002000001000200000001000002010802004a00b013034b024b
5342014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b
544218b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb002
88b801005458b80119b101018e851bb0124358b900010119858d1bb90001
01ff858d59590016763f183f123e113946443e113946443e113946443e11
3946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b
2b2b2b2b2b2b2b2b2b2b2b4b5079b9001f0158b3071f3d072b2b4b5379b9
00900158b307903d072b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb09353205c58b901ae01ac4544b901ad01ac45445958b9032c01ae45
5258b901ae032c4459594bb8019a53205c58b9003f01ae4544b901ae01ae
45445958b908d6003f455258b9003f08d64459594bb8040153205c58b900
2301ae4544b9002001ae45445958b916200023455258b900231620445959
4bb8040153205c58b9001e01ad4544b9002a01ad45445958b917e0001e45
5258b9001e17e04459594bb8040153205c58b1ba234544b1232345445958
b9162000ba455258b900ba16204459594bb03c53205c58b11f1f4544b121
1f45445958b90102001f455258b9001f01024459594bb04653205c58b11f
1f4544b12d1f45445958b9012e001f455258b9001f012e4459594bb80301
53205c58b11f1f4544b11f1f45445958b90d20001f455258b9001f0d2044
59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b45695342014b5058b108004259435c58
b1080042591610703eb0124358b90d193ea51bba00d203eb000b2b59b00a
2342b00b2342003f3f182b103c012f060cb0062342b0072342b0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b0112342002b2b2b2b2b2b2b2b2b2b2b7474
757575750018456944456944456944456944737373737373737375737373
7373737374004bb02a534bb03f515a58b1070745b040604459004bb03053
4bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03c515a58b10303
45b040604459004bb02e534bb03c515a58b1090945b8ffc0604459435c58
b64f2c014f1f01372b7474592b732b2b2b7373742b2b2b2b2b2b2b2b2b2b
2b2b74732b00000000>
[463 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HIBBAA+Arial-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>HIBBAA+Arial-ItalicMT AddT42Char 
HIBBAA+Arial-ItalicMT /CharStrings get begin
/space 3 def
end
HIBBAA+Arial-ItalicMT /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
reset_gvm
/JEXDFT+Arial-ItalicMT /HIBBAA+Arial-ItalicMT findfont ct_VMDictPut
/JEXDFT+Arial-ItalicMT*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
JEXDFT+Arial-ItalicMT nf
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
107.138 94.8555 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
108.801 94.8555 mo
(./0)
[4.15329 4.40556 0 ]xsh
1 lc
[] 0 dsh
14.1828 119.9 mo
62.3531 119.9 li
62.3531 97.2842 li
14.1828 97.2842 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: QJJAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c796698a7b4150000535000001ac668656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f63610086b8580000284800001a2c6d6178700b470ca80000
4274000000206e616d65eae8391300004294000005bb7072657052fec4e9
0000485000000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d00000001000000030000c658f5215f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
016400000164000001640000016400000164000001640000016400000164
000001640000016400000164000001640000016400000164000001640000
016400000164000001640000016400000164000001640000016400000164
000001640000016400000164000001640000016400000164000001640000
043600000436000005ea000005ea000007a8000007a8000007a8000007a8
000007a8000007a8000007a8000007a8000007a8000007a80000096a0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000c08
00000c0800000c1800000c1800000c1800000c1800000c1800000c180000
0c1800000d6a00000d6a00000d6a00000d6a00000d6a00000d6a00000d6a
00000d6a00000d7a00000f1000000f1000000f1000000f1000000f200000
0f2000000f20000010a0000010a000001240000013c6000013c6000014f2
00001502000015020000151200001522000015e2000015e2000017c80000
17c8000017c8000017c8000017c80000197e0000197e0000197e00001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600001ac600001ac600001ac600001ac600001ac600001ac600001ac6
00001ac600001ac600001ac600001ac600001ac600001ac600001ac60000
1ac600010000068a0100003f0076000700020010002f00560000040d0aff
000300020000000e00ae000000030000000000fe00000000000300000007
00c400fe0001000000000000007f01c20001000000000003000e02410001
000000000004000e024f0001000000000006000e025d0001000000000007
0062026b0003000004090001001c02cd0003000004090002000e02e90003
000004090003001c02f70003000004090004001c03130003000004090006
001c032f000300010409000000fe034b000300010409000700c404490054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e5479
70656661636520a920546865204d6f6e6f7479706520436f72706f726174
696f6e20706c632e204461746120a920546865204d6f6e6f747970652043
6f72706f726174696f6e20706c632f5479706520536f6c7574696f6e7320
496e632e20313939302d313939322e20416c6c2052696768747320526573
65727665644c42444d49472b417269616c4d544c42444d49472b41726961
6c4d544c42444d49472b417269616c4d54417269616ca82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e004c004200
44004d00490047002b0041007200690061006c004d005400520065006700
75006c00610072004c00420044004d00490047002b004100720069006100
6c004d0054004c00420044004d00490047002b0041007200690061006c00
4d0054004c00420044004d00490047002b0041007200690061006c004d00
5400540079007000650066006100630065002000a9002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e00200070006c0063002e002000440061007400
61002000a900200054006800650020004d006f006e006f00740079007000
6500200043006f00720070006f0072006100740069006f006e0020007000
6c0063002f005400790070006500200053006f006c007500740069006f00
6e007300200049006e0063002e00200031003900390030002d0031003900
390032002e00200041006c006c0020005200690067006800740073002000
5200650073006500720076006500640041007200690061006c00ae002000
540072006100640065006d00610072006b0020006f006600200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e00200070006c0063002000720065006700
6900730074006500720065006400200069006e0020007400680065002000
55005300200050006100740020002600200054004d0020004f0066006600
2e00200061006e006400200065006c007300650077006800650072006500
2e00b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[6855 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 42 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>QJJAAA+ArialMT AddT42Char 
1 3080 587 <ffff0066ffe7057605d3020600260000>QJJAAA+ArialMT AddT42Char 
1 1960 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>QJJAAA+ArialMT AddT42Char 
1 5362 616 <ffff0044ffe80427043e020600520000>QJJAAA+ArialMT AddT42Char 
1 3450 603 <0002005bffe8044405dd001c002801134045390a35253927490a46254827
590e591155155b1f51255c270c3d18010920260923170033018f051c1a00
201c0c07261c130b0092019a1d242a400d0d02552a400b0b02550fb8fff0
4011101002550f0a0f0f02550f0a0d0d02550fb8fff6400b0c0c02550f04
0b0b02550fb8fff0b40b0d06550fb8fff8b40f0f06550fb8ffc040102425
34300f01000f100f200f030f312ab8ffc040431e2334302a012a802a0123
24170c0e0f025517120d0d0255170c0c0c0255171c0b0b025517120b0b06
5517160c0d0655170e1010065517402425341f173f170217312910f65d2b
2b2b2b2b2b2b2bed5d10712bf65d5d2b2b2b2b2b2b2b2b2b2bedf4ed003f
ed3fed3fedf4e4011112390011123931300071015d01170e022322060607
363633320015140606232226021110002132360334262322061514163332
3603919f0b4973a8dfa2470444b672d101128abda3bdd270011d0128b832
029d8f95a2b38386a705dd026b541856bd956565fee1f5baee82ad010e01
4f01a501240cfc50a6d4e0bbb9c4e300>QJJAAA+ArialMT AddT42Char 
1 6088 627 <0001008dfed306540426000f017c402e10110120114f1160117011a011c0
11ef11070804040106060b022b0f0a0d0e0e2b0c0a101006550c140f0f06
550cb8ffef40190d0d06550c110c0c06550c0c11301150117011a0110407
2509b8fff6b41010025509b8ffee400b0d0d025509060c0c025509b8fff0
b40b0b025509b8ffed402a0c0d0655090310100655300901000910093009
4009b009d009e009071009200930096009700980090609b801c4b5400501
032505b8ffecb41010025505b8ffeab40d0d025505b8fff4b40c0c025505
b8fff4b40b0b025505b8fff140240c0d06551f052f05af05df0504000530
05d005e005041005200530056005700580050605b801c4b2022500b8fffa
b41010025500b8fff4400b0e0e025500060b0b025500b8fff0400b090a02
55000a1010065500b8fff340160d0d0655000d0c0c06550f00014f000100
0001004e1010f65d71722b2b2b2b2b2b2bedfd5d71722b2b2b2b2bfd71fd
5d71722b2b2b2b2b2bed5d12392f2b2b2b2bed003f3ffd3c3c3f3c103c31
30015d5d133311211133112111331133112311218db4019ab4019bb37795
face0426fc6e0392fc6e0392fc6efe3f012d>QJJAAA+ArialMT AddT42Char 
1 1514 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>QJJAAA+ArialMT AddT42Char 
1 3856 607 <ffff004bffe8041e043e020600480000>QJJAAA+ArialMT AddT42Char 
1 5062 615 <00010088000003e30426000b00fc4019d00de00d02022b09090401060a07
0a0407250d400b0b025505b8ffec400b1010025505160e0e025505b8ffec
40110d0d025505080c0c025505220b0b025505b8fff6401e0b0d0655050a
0f0f06550516101006550540333634ff0501ff0501054e0db8ffc0401634
3634b00df00d02700da00db00dc00d040d010a2500b8fff6b41111025500
b8fffab41010025500b8fffa40170e0e025500040c0c0255000a0b0b0255
00030b0b065500b8fff6b40f0f065500b8ffc04014333634f00001000020
00d000e000f00005004e0c10f65d712b2b2b2b2b2b2b2bfd3c105d712bf6
5d712b2b2b2b2b2b2b2b2b2bfd3c003f3c3f3c392fed3130015d13331121
113311231121112388b401f3b4b4fe0db40426fe4601bafbda01d7fe2900
>QJJAAA+ArialMT AddT42Char 
1 3872 610 <00010087000003f004260009015240111903140802560267027b0784028d
070502b8ffea400b0911025507160911025502b8ffea4039091106550716
09110655030708082b02031402020302070803010608060a07250b401010
02550b400b0b025504241011025504120e0e025504b8ffed401d0d0d0255
04060c0c0255041a0b0b025504161010065504060f0f065504b8fff4b40c
0d065504b8fffc40120b0b06550440333634ff0401ff0401044e0bb8ffc0
4017343634b00bf00b02700b800ba00bb00bc00b050b022509b8fffab410
10025509b8fffa400b0e0e025509060b0c025509b8fffa400b0f0f065509
040b0b065509b8ffc04012333634f0090100092009d009e00904094e0a10
f65d712b2b2b2b2b2bed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2bed
b10602435458b303080702111239391bb3030806021112393959003f3c3f
3c12393987052e2b877dc4002b2b2b2b3130005d015d1333110133112311
012387b401f3c2b4fe0dc20426fcd6032afbda0325fcdb00>QJJAAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>QJJAAA+ArialMT AddT42Char 
QJJAAA+ArialMT /CharStrings get begin
/g587 587 def
/g616 616 def
/g603 603 def
/g627 627 def
/g607 607 def
/g615 615 def
/g610 610 def
end
QJJAAA+ArialMT /Encoding get
dup 32 /g587 put
dup 33 /g616 put
dup 34 /g603 put
dup 35 /g627 put
dup 36 /g607 put
dup 37 /g615 put
dup 38 /g610 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JEXDFU+ArialMT /QJJAAA+ArialMT findfont ct_VMDictPut
/JEXDFU+ArialMT*1 
[32{/.notdef}rp /g587 /g616 /g603 /g627 /g607 /g615 /g610 
217{/.notdef}rp]
JEXDFU+ArialMT nf
JEXDFU+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
16.4188 106.164 mo
( !!"#$%&$)
[5.79365 4.40416 4.46801 4.60375 6.6002 4.40416 4.40416 4.47605 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c796670600dec000053500000204c68656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f636100cc03a40000284800001a2c6d6178700b470ca80000
4274000000206e616d65e766451500004294000005bb7072657052fec4e9
0000485000000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d0000000100000003000024edd1435f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a000000aa00000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
0000015000000150000001500000015000000150000002fa000004920000
0492000005da0000069e0000069e0000069e000007a40000088800000888
00000abe00000abe00000abe00000c6800000c6800000d6e00000d6e0000
0fda00001284000012840000128400001284000012840000128400001284
000013c4000013c4000013c4000013c4000013c4000013c4000013c40000
16960000187400001a2800001a2800001a2800001a2800001a2800001a28
00001a2800001a2800001a2800001a2800001c5800001c5800001c580000
1c5800001c5800001c580000200000002000000020000000200000002000
000020000000200000002000000020000000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c0000204c0000204c0000204c0000204c0000204c0000204c0000204c
0000204c0000204c0000204c0000204c0000204c0000204c0000204c0000
204c00010000068a0100003f0076000700020010002f00560000040d0aff
000300020000000e00ae000000030000000000fe00000000000300000007
00c400fe0001000000000000007f01c20001000000000003000e02410001
000000000004000e024f0001000000000006000e025d0001000000000007
0062026b000300010409000000fe02cd0003000104090001001c03cb0003
000104090002000e03e70003000104090003001c03f50003000104090004
001c04110003000104090006001c042d000300010409000700c404490054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e5479
70656661636520a920546865204d6f6e6f7479706520436f72706f726174
696f6e20706c632e204461746120a920546865204d6f6e6f747970652043
6f72706f726174696f6e20706c632f5479706520536f6c7574696f6e7320
496e632e20313939302d313939322e20416c6c2052696768747320526573
65727665644c42444d4a472b417269616c4d544c42444d4a472b41726961
6c4d544c42444d4a472b417269616c4d54417269616ca82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002f00
5400790070006500200053006f006c007500740069006f006e0073002000
49006e0063002e00200031003900390030002d0031003900390032002e00
200041006c006c0020005200690067006800740073002000520065007300
650072007600650064004c00420044004d004a0047002b00410072006900
61006c004d00540052006500670075006c00610072004c00420044004d00
4a0047002b0041007200690061006c004d0054004c00420044004d004a00
47002b0041007200690061006c004d0054004c00420044004d004a004700
2b0041007200690061006c004d00540041007200690061006c00ae002000
540072006100640065006d00610072006b0020006f006600200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e00200070006c0063002000720065006700
6900730074006500720065006400200069006e0020007400680065002000
55005300200050006100740020002600200054004d0020004f0066006600
2e00200061006e006400200065006c007300650077006800650072006500
2e00b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[8269 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 6696 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>GFNBAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/m 80 def
end
GFNBAA+ArialMT /Encoding get
dup 109 /m put
pop
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT /GFNBAA+ArialMT findfont ct_VMDictPut
/JEXDFV+ArialMT*1 
[109{/.notdef}rp /m 146{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
34.9459 115.747 mo
(m)sh
286.147 71.7297 mo
293.558 71.7297 299.627 65.7244 299.627 58.2496 cv
299.627 50.8388 293.558 44.8335 286.147 44.8335 cv
278.736 44.8335 272.667 50.8388 272.667 58.2496 cv
272.667 65.7244 278.736 71.7297 286.147 71.7297 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
286.147 71.7297 mo
293.558 71.7297 299.627 65.7243 299.627 58.2496 cv
299.627 50.8388 293.558 44.8335 286.147 44.8335 cv
278.736 44.8335 272.667 50.8388 272.667 58.2496 cv
272.667 65.7243 278.736 71.7297 286.147 71.7297 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 1170 39 <0002009e0000055a05ba000f001d00e5402f201f0143081c1d1e02010211
101e0f000817262009011f400d0d0255092010100255090a0f0f02550918
0d0d025509b8fff440150c0c0655091a1f1d102001200001002010100255
00b8fff6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d1e3b5c182b10f62b2b2b2b2b
2b5d3cfd3c10f62b2b2b2b2b5ded003f3cfd3c3f3cfd3c31304379403603
1b0708060805080408040619181a1802060b0a0c0a0d0a03061516141613
1603061b03172101120e17210118081c2101160a1121002b2b012b2b2a2a
2a2a81015d3311213217161716121514020e022325213236373636353426
272623219e01f9ab5a7e5974734e7a91cd85feb1013991a531454d976c4e
adfecc05ba151d4c62fecfc4a7fefea96132ad363145e9a6e6f72a1e>GFNBAA+ArialMT AddT42Char 
1 2750 49 <0001009c0000051f05ba0009017db1120bb8ffc0400a13153408180c1602
5503b8ffe840210c16025508020303200708140707080207030308090402
02090708040320060605b8ffecb40f0f025505b8fff2400b0d0d02550512
0c0c025505b8fff7401a0b0b0655055d200b01200b500b600b700b800b05
0b0809200100b8ffc0400d13153420000100201010025500b8fff6b40f0f
025500b8fff6b40d0d025500b8fffa400b0c0c025500040b0b065500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b
2b2b5d2b3cfd3c105d71f42b2b2b2b3c10fd3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59331133011133112301119cc70302bac7fcfe05bafb81047ffa
460480fb8000>GFNBAA+ArialMT AddT42Char 
1 3438 53 <000200a1000005ad05ba0018002201fc4021120b0e0112361c5a1f66086d
1f0409100d0d065508100d0d065507100d0d065524b8ffc0b40c0c02550d
b8fff4b40c0c02550cb8fff4b40c0c02550bb8fff4b40c0c025512b8ffe2
b3121a3412b8fff0b322273411b8ffe2b31d273410b8ffe2b31d27340fb8
ffe2b31d273412b8ffd8b31d263411b8ffe2b3121a3410b8ffe2b3121a34
0fb8ffe24049121a34250e4a1c4a20530b5c1c6d1c7209780e790f850a88
0f970da90fb80fe80ee70f100e0c0c20110f1411110f110f0c09121b0221
1a160a061211100d0c0518090916171a191e17b8ffc040190b0b06551717
0021221e0201020018180f0f0e081e260e9c06b8ffe8b40f0f025506b8ff
f6b40d0d025506b8ffe040220c0c025506060d0d0655065d202470248024
03242218200120000100201010025500b8fff6b40f0f025500b8fff6b40d
0d025500b8fffa400b0c0c025500060b0b065500b8fff7b40c0c065500b8
fff8400a0d0d0655005d233ba8182b4e10f42b2b2b2b2b2b2b5d3c4dfd3c
105df62b2b2b2b19e418ed003f3c103c103c3f3cfd3c12392f2bfd3c103c
392f12173901111739870e2e2b057d10c43130015d2b2b2b2b2b2b2b2b2b
2b2b2b2b002b2b2b5d435c58400a08400f390f103a11123a2b2b2b590171
435c58b9000effde401a193911221939122219390e401c39102214391022
1f39102215392b2b2b2b2b2b2b5933112132161615140607161716171323
032e02272623231111213236363534262321a1028ac4cc7acad34d28554c
fff4c2556e572d214be101a185964e97a3fe3005ba4fc8799cd61d25244e
75fe710131848c380b07fd750333377947688600>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/D 39 def
/N 49 def
/R 53 def
end
GFNBAA+ArialMT /Encoding get
dup 68 /D put
dup 78 /N put
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[68{/.notdef}rp /D 9{/.notdef}rp /N 3{/.notdef}rp /R 26{/.notdef}rp /m 
146{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
277.459 60.6131 mo
(RND)
[5.74817 5.81207 0 ]xsh
98.449 122.072 mo
105.924 122.072 111.929 116.003 111.929 108.592 cv
111.929 101.181 105.924 95.1121 98.449 95.1121 cv
91.0381 95.1121 85.0328 101.181 85.0328 108.592 cv
85.0328 116.003 91.0381 122.072 98.449 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
98.449 122.072 mo
105.924 122.072 111.929 116.003 111.929 108.592 cv
111.929 101.181 105.924 95.1121 98.449 95.1121 cv
91.0381 95.1121 85.0328 101.181 85.0328 108.592 cv
85.0328 116.003 91.0381 122.072 98.449 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 42 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>GFNBAA+ArialMT AddT42Char 
1 170 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>GFNBAA+ArialMT AddT42Char 
1 1694 43 <000100a40000052205ba000b00d8b9000dffc0401a13153404031e090aa0
0ad00a020a0502020b0808050820070706b8ffeeb40f0f025506b8fff240
0b0d0d025506100c0c025506b8ffe040180b0b065506010c0c0655065d80
0d010d020b200120000100b8ffc0400a13153400201010025500b8fff6b4
0f0f025500b8fff6b40d0d025500b8fffa400b0c0c025500080b0b065500
b8fff7b40c0c065500b8fff840160d0d0655005d0c200d01200d500d600d
700d043b59182b5d7110f62b2b2b2b2b2b2b2b5d3cfd3c105df62b2b2b2b
2b3c10fd3c003f3c3f3c395d2f3cfd3c3130012b33113311211133112311
2111a4c202fac2c2fd0605bafda6025afa4602b3fd4d>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/H 43 def
end
GFNBAA+ArialMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D 3{/.notdef}rp /H 5{/.notdef}rp 
/N 3{/.notdef}rp /R 26{/.notdef}rp /m 146{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
89.5687 110.956 mo
(H\(m\))
[5.75297 2.68636 6.63934 0 ]xsh
145.214 122.072 mo
152.625 122.072 158.694 116.003 158.694 108.592 cv
158.694 101.181 152.625 95.1121 145.214 95.1121 cv
137.803 95.1121 131.734 101.181 131.734 108.592 cv
131.734 116.003 137.803 122.072 145.214 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
145.214 122.072 mo
152.625 122.072 158.694 116.003 158.694 108.592 cv
158.694 101.181 152.625 95.1121 145.214 95.1121 cv
137.803 95.1121 131.734 101.181 131.734 108.592 cv
131.734 116.003 137.803 122.072 145.214 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 1498 40 <000100a2000004e805ba000b0095401506051e080807070003041e020102
0a091e0b000807b8ffc0401d1012340754034a200a200d020a1a0d040920
0120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8
fffab40c0c025500b8fffab40c0c065500b8fff0400a0d0d0655005d0c3b
5b182b4e10f42b2b2b2b2b2b5d3c4dfd3c4e10f65d4df4e42b003f3cfd3c
3f3cfd3c12392f3c10fd3c3130331121152111211521112115a20424fc9e
032bfcd5038405baadfe3facfe0dad00>GFNBAA+ArialMT AddT42Char 
1 2184 46 <000100960000055205ba000b01fe401e0322373908093a270a3506360a47
0a57038603d70307760ad903d90a0306b8fff440180d0d025528058c048a
05aa04ea08050a04013504d6040209b8ffe04009122134032012213403b8
ffdeb30c391209b8ffe0b312213408b8ffe0b312213404b8ffe0b31d2134
04b8ffc0b312163408b8ffde403d1939080925253d080919193d06060709
0a09080a0503040420050a1405050a090808200706140707060a0a000502
040102070b0800080a03020b010004b8023a400f300501a005b005c005e0
0504054a08b8023a400b30070120078007b0070307b80286400c0b202000
0100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffab4
0c0c025500b8fffab40c0c065500b8fff2400a0d0d0655005d0c3ba8182b
10f42b2b2b2b2b2b5dedfd5d71edf45d71ed103c103c3c3c003f3c3c3c3f
3c3c3c12392f87052e2b0e7d10c487052e182b047d10c40708103c083c01
4bb018534bb01b515a58b90004ffd83859b10602435458b90004fff0b30c
113403b8fff040170c113406100e113408100e103409100e11340a100d10
34002b2b2b2b2b2b593130012b2b2b2b2b2b2b435c58401109221939082c
1939042c193904221b3905b8ffdeb616390422163906b8ffde400b123908
2214390440143908b8ffdeb52539044015392b2b2b2b2b2b2b2b2b2b2b59
002b2b2b0171725d2b00715d2b2b33113311012101012101071196c202d8
0107fd990282ff00fdf6f005bafd2902d7fdaefc9802e6eafe04>GFNBAA+ArialMT AddT42Char 
1 4058 54 <0001005cffe704eb05d30030021540276303630473037404042527350339
1c430349074c1d451f44244627530359075c1d572889130e23b8fff2b410
10025524b8fff2b41010025525b8fff2b41010025526b8fff2b410100255
27b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8ff
f6b40d10025526b8fff6b40d10025527b8fff640460d100255280d262402
24032725360f34234425452f5a20562355256c0b6a0d6b0e66146518790b
7a0d7a0f7d107524732586038a0b890d8a0f8d1085248325920d960f9615
1eb10602435458402d2126121b261a09262901260000291a120432312600
650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c
0c0655051e2d091e1e1603003fed3fed2b1112395d1112391112395d1112
395d01111217392fed2fed2fed2fed1b402d25240e0d0b05211c1d1e1b08
070604030206012524220e0d0b06051e1b2d1a400c0c02558f1a011aed16
002d01b8ffc040120c0c02551001200150016001700190010601b801b040
132d1e1e1603051e2d091b261a4a092600290129b8ffeab40e0e025529b8
fff4400d0c0c0255291a32212612012612b8ffecb40e0e025512b8fff6b4
0d0d025512b8fff8400f0c0c02551254200001001931635b182b4e10f45d
4de42b2b2bed10ed4e10f62b2b5d4dedf4ed003fed3fed10fd5d2be410fd
5d2bf4111217391117391112393901121739593130005d712b2b2b2b2b2b
2b2b2b2b015d7113371e0233323636353426272624272626353436363332
161617072626232206151417160417161615140606232224265cb70d5fc8
7d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958
807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc164
69cc810e8b8e815b4f33336b283bb57675cf7374e900>GFNBAA+ArialMT AddT42Char 
1 5060 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/E 40 def
/K 46 def
/S 54 def
/a 68 def
end
GFNBAA+ArialMT /Encoding get
dup 69 /E put
dup 75 /K put
dup 83 /S put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /E 2{/.notdef}rp /H 
2{/.notdef}rp /K 2{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp 
/a 11{/.notdef}rp /m 146{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
137.611 110.956 mo
(E)sh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
142.978 112.042 mo
(SKa)
[3.45007 3.45009 0 ]xsh
286.147 151.077 mo
293.558 151.077 299.627 145.071 299.627 137.66 cv
299.627 130.186 293.558 124.18 286.147 124.18 cv
278.736 124.18 272.667 130.186 272.667 137.66 cv
272.667 145.071 278.736 151.077 286.147 151.077 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
286.147 151.077 mo
293.558 151.077 299.627 145.071 299.627 137.66 cv
299.627 130.186 293.558 124.18 286.147 124.18 cv
278.736 124.18 272.667 130.186 272.667 137.66 cv
272.667 145.071 278.736 151.077 286.147 151.077 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 7256 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/s 86 def
end
GFNBAA+ArialMT /Encoding get
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /E 2{/.notdef}rp /H 
2{/.notdef}rp /K 2{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp 
/a 11{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
280.397 140.024 mo
(E)sh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
285.764 141.11 mo
(Ks)
[3.45007 0 ]xsh
189.104 122.072 mo
196.579 122.072 202.584 116.003 202.584 108.592 cv
202.584 101.181 196.579 95.1121 189.104 95.1121 cv
181.693 95.1121 175.688 101.181 175.688 108.592 cv
175.688 116.003 181.693 122.072 189.104 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
189.104 122.072 mo
196.578 122.072 202.584 116.003 202.584 108.592 cv
202.584 101.181 196.578 95.1121 189.104 95.1121 cv
181.693 95.1121 175.688 101.181 175.688 108.592 cv
175.688 116.003 181.693 122.072 189.104 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 8192 95 <000100bcfe51015905d300030032b90003017e4018010005a102029f03af
03020376000020010101a104a198182b4e10f45d3c4d10fd5d3c10ee003f
4ded313013113311bc9dfe510782f87e>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/bar 95 def
end
GFNBAA+ArialMT /Encoding get
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /E 2{/.notdef}rp /H 
2{/.notdef}rp /K 2{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp 
/a 11{/.notdef}rp /m 5{/.notdef}rp /s 8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
186.995 110.956 mo
(||)
[2.1098 0 ]xsh
367.602 122.072 mo
375.013 122.072 381.019 116.003 381.019 108.592 cv
381.019 101.181 375.013 95.1121 367.602 95.1121 cv
360.128 95.1121 354.122 101.181 354.122 108.592 cv
354.122 116.003 360.128 122.072 367.602 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
367.602 122.072 mo
375.013 122.072 381.019 116.003 381.019 108.592 cv
381.019 101.181 375.013 95.1121 367.602 95.1121 cv
360.128 95.1121 354.122 101.181 354.122 108.592 cv
354.122 116.003 360.128 122.072 367.602 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
365.494 110.956 mo
(||)
[2.04593 0 ]xsh
324.415 122.072 mo
331.826 122.072 337.831 116.003 337.831 108.592 cv
337.831 101.181 331.826 95.1121 324.415 95.1121 cv
316.94 95.1121 310.935 101.181 310.935 108.592 cv
310.935 116.003 316.94 122.072 324.415 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
324.415 122.072 mo
331.826 122.072 337.831 116.003 337.831 108.592 cv
337.831 101.181 331.826 95.1121 324.415 95.1121 cv
316.94 95.1121 310.935 101.181 310.935 108.592 cv
310.935 116.003 316.94 122.072 324.415 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 3176 51 <0002009e000004fd05ba000d001800b2402c65116b14024b104b145b105b
14040b0c1e0f0e0e0017181e02010200081226080a0d0d025508100b0b06
5508b8fff4401b0c0c0655081a201a01201a011a180d2001200001002010
10025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c02
55000c0b0b065500b8fffab40c0c065500b8fff0400a0d0d0655005d193b
5c182b10f62b2b2b2b2b2b2b5d3cfd3c4e10715df62b2b2b4ded003f3f3c
fd3c12392f3cfd3c3130015d005d33112132171e02151402212111112132
36353426272623219e0229924d6c9259eefec9fe88017bbc9e5d4c3184fe
8905ba0e1265b66dbbfefdfdac03018c7f5c83150d00>GFNBAA+ArialMT AddT42Char 
1 5782 69 <00020086ffe8041f05ba0010001d0180409b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b1824d00b01100b400b60
0b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02
550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8
fff4402f0d0d06550b7401113300040c0c025500040d0d06550033032502
02c001019001a001b001f001041f013f014f010301b8fffeb41010025501
b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b0255010c0b
0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10
fdf42b2be410fd2b2b2b2b2b2b2b2b5d71ed003fed3f3fed3f1139111239
3130005d015d7172007121231133113633321e0215100023222703141716
333236353426232206012da7b472b162af7140fef2bdbc6b0234559176ac
a57576ac05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/P 51 def
/b 69 def
end
GFNBAA+ArialMT /Encoding get
dup 80 /P put
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /E 2{/.notdef}rp /H 
2{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P /.notdef /R 
/S 13{/.notdef}rp /a /b 10{/.notdef}rp /m 5{/.notdef}rp /s 
8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
316.813 110.956 mo
(E)sh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
322.115 112.042 mo
(PKb)
[3.45007 3.51218 0 ]xsh
62.3531 108.592 mo
80.1774 108.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
79.4747 105.845 mo
85.0328 108.592 li
79.4747 111.339 li
79.4747 105.845 li
ef
111.929 108.592 mo
126.942 108.592 li
@
126.24 105.845 mo
131.734 108.592 li
126.24 111.339 li
126.24 105.845 li
ef
158.694 108.592 mo
170.832 108.592 li
@
170.13 105.845 mo
175.688 108.592 li
170.13 111.339 li
170.13 105.845 li
ef
62.3531 108.592 mo
71.0417 108.592 li
71.0417 136.894 li
189.104 136.894 li
189.104 126.864 li
@
186.357 127.566 mo
189.104 122.072 li
191.851 127.566 li
186.357 127.566 li
ef
202.584 108.592 mo
214.722 108.592 li
@
214.083 105.845 mo
219.578 108.592 li
214.083 111.339 li
214.083 105.845 li
ef
133.203 69.2381 mo
157.224 69.2381 li
157.224 47.2612 li
133.203 47.2612 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 336 36 <0002fffd0000055905ba0007000e0167b6010e0f10025502b8fff2b40f10
025502b8fff8b40d0d065502b8fff440590c0c0655090c0c0c0655050c0c
0c06552f10301067086809601088039010c905c606c010f0100b08055901
56025010680bb010f30cf30df30e09040c040d040e030b0a090504040c0d
0e080607070c09050408060c07010000b8fff8400f0c0c02550020070c14
07070c020303b8fff840150c0c02550320040c1404040c091e0505081e06
0306b80270400900080ce94002010202ba010b0001010b40120c20006507
03525004cf04df040390040104b80101400b500cc007df0c03900c010cb8
010140100f07cf07027f0780070207930fd6d7182b10f45d7119f45d71f4
5d7118ed10ed1a1910eded00183f3c1aed3fe43c10ed3c10ed87052e2b2b
7d10c4872e182b2b7d10c401111239391139398710c4c40ec4c4870510c4
c40ec4c43130014bb00b534bb01e515a58b4040f030807bafff00000fff8
38383838590172715d2b2b2b2b2b2b230133012303210313210326270607
030233d10258ddabfd9ba1d901f19946221c3305bafa4601bcfe44025a01
96b9778d8b00>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/A 36 def
end
GFNBAA+ArialMT /Encoding get
dup 65 /A put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A 2{/.notdef}rp /D /E 
2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 
/.notdef /R /S 13{/.notdef}rp /a /b 10{/.notdef}rp /m 
5{/.notdef}rp /s 8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
138.122 60.6131 mo
(SK)
[5.30263 0 ]xsh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
148.792 61.7631 mo
(A)sh
145.214 69.2381 mo
145.214 90.3206 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
147.961 89.6179 mo
145.214 95.1121 li
142.467 89.6179 li
147.961 89.6179 li
ef
286.147 71.7297 mo
286.147 119.325 li
@
288.894 118.686 mo
286.147 124.18 li
283.4 118.686 li
288.894 118.686 li
ef
281.803 103.226 mo
289.725 103.226 li
289.725 93.1317 li
281.803 93.1317 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
0 gry
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
282.122 100.35 mo
(K)sh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
287.489 101.437 mo
(s)sh
286.147 71.7297 mo
286.147 108.592 li
306.08 108.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
305.441 105.845 mo
310.935 108.592 li
305.441 111.339 li
305.441 105.845 li
ef
299.627 137.66 mo
367.602 137.66 li
367.602 126.864 li
@
364.855 127.566 mo
367.602 122.072 li
370.35 127.566 li
364.855 127.566 li
ef
337.831 108.592 mo
349.331 108.592 li
@
348.628 105.845 mo
354.122 108.592 li
348.628 111.339 li
348.628 105.845 li
ef
381.019 108.592 mo
393.924 108.592 li
@
393.221 105.845 mo
398.779 108.592 li
393.221 111.339 li
393.221 105.845 li
ef
398.779 119.9 mo
450.463 119.9 li
450.463 97.2842 li
398.779 97.2842 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: QJJAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+ArialMT gcheck setglobal} if
1 3096 594 <000100a1000006b505ba000b0122404f0f0d400d700d800dbf0dc00def0d
0707021e0b080404011002200b2a101002550b0e0f0f02550b060d0d0255
0b100c0c02550b0a0b0b02550b1a0f0f06550b0f0c0d06550f0b014f0b7f
0b8f0b030bb8016db30607200ab8ffd8b4101002550ab8ffeeb40f0f0255
0ab8fffeb40d0d02550ab8fff0b40c0c02550ab8ffe0b40b0b02550ab8ff
e6b40f0f06550ab8ffee40120c0d0655500a01000a01400a700a800a030a
b8016d4009062003101010025503b8fff6b40f0f025503b8fffe400b0c0c
025503071010065503b8fffcb40f0f065503b8fffe40180b0d0655400390
030220037003a003c003ef030503700d015d2f5d722b2b2b2b2b2bedfd5d
71722b2b2b2b2b2b2bed10fd5d712b2b2b2b2b2b2bed003f3c103c2ffd3c
3130015d133311211133112111331121a1c201e7c201e7c2f9ec05bafaf3
050dfaf3050dfa46>QJJAAA+ArialMT AddT42Char 
1 5602 622 <0003004bfe69064a05ba001d00290035014440625812010406040a0b150b
190f371f375b035c0d5512531c592059225926552c562e55346a036a0d65
12641c6a206e226e266828662c652e663479037606790d7612761c830689
0d8512231e3001002733331c051a0721332d1c0b140b100e0000010fb8ff
f6b70f1002550f250010b8fff0b40c0c065510b8fff3400a0d0d06551010
17242408b8fff6b40a0b025508b8ffe4b40b0c065508b8ffeab40d0d0655
08b8ffeab40f0f065508b8ffc04024242534300801200801083100374037
5037603780379037060037203730374037df370537b8ffc040341e233430
3701372a2417180b0b065517230c0c0655171c0d0d065517080f0f065517
0e1010065517402425341f173f170217313610f65d2b2b2b2b2b2bed1071
2b5d5df45d5d2b2b2b2b2bed12392f2b2b3cfd2b3c003f3f3f3cfde43f3c
fde4011112393931305d005d013311363633321215140223222627112311
060623220211341233321617131416333236353426232206051416333236
35342623220602f1b438864dbdddeeb13a7854b436834ca7fae2bf508233
b384636e9b8f707879fd5e977075747a7b6f8c05bafe05403ffec5eff9fe
cd2450fe0d01f33a3a01250111e701393f40fe50f0a5cbd6cac6cebae1c6
c5c5d2d2cd00>QJJAAA+ArialMT AddT42Char 
1 2410 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>QJJAAA+ArialMT AddT42Char 
1 5378 618 <ffff0087fe690421043e020600530000>QJJAAA+ArialMT AddT42Char 
1 5410 620 <000100260000038504260007009a40132f09300940095f09a0090502072b
0006050a07bb0157000400020157b2042505b8fff6400b10100255050a0f
0f025505b8fff4b40d0d025505b8fff6b40b0b025505b8ffeeb40b0b0655
05b8fff8b40c0c065505b8fffb40260d0d06550506101006550005100550
05b005c00505000550056005a005b005050005a00502052f5d71722b2b2b
2b2b2b2b2beded10ed003f3ffd3c3130015d132115211123112126035ffe
aab3feaa042695fc6f039100>QJJAAA+ArialMT AddT42Char 
1 4256 612 <00010086000003900426001d013e404b3e053f063f07440544179417060d
062f042c052f062f1f4c065e067a078b0796060a4b044b069b049b06ab04
ab06bb04bb06cb04cb060a1f1f3f1f7b047b068f048f06060411060f1817
17b8fff0401b0c0d0655172516151416161506040902110f0406040c1518
1c1302b8010c402a1b1b16010c48090901061c1717160a040613110f050b
181517031c0baa0016011649201f011f011c2500b8fff8b41010025500b8
fffa40110e0e025500060c0c025500060b0b025500b8fffab40c0c065500
b8fffcb40d0d065500b8fff0b40f0f065500b8fff6b41010065500b8ffc0
4012333634f0000100002000d000e00004004e1e10f45d712b2b2b2b2b2b
2b2b2bfd3c105df55de4121739111739003f3c103c3f3c10ed1112392fed
391239391217391112393987052e2b2b0e7d10c401113311335d71313001
5d711333113236373e023333152722070607060607161713230326262311
2386b45645433542565f24324714152b2944477470c5c6c03b583db40426
fe35429f7e501c950115166d6850211fb9feb70149633ffe1500>QJJAAA+ArialMT AddT42Char 
1 1078 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>QJJAAA+ArialMT AddT42Char 
1 5394 619 <ffff0050ffe803ed043e020600460000>QJJAAA+ArialMT AddT42Char 
QJJAAA+ArialMT /CharStrings get begin
/g594 594 def
/g622 622 def
/g618 618 def
/g620 620 def
/g612 612 def
/g619 619 def
end
QJJAAA+ArialMT /Encoding get
dup 39 /g594 put
dup 40 /g622 put
dup 41 /g618 put
dup 42 /g620 put
dup 43 /g612 put
dup 44 /g619 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFU+ArialMT*1 
[32{/.notdef}rp /g587 /g616 /g603 /g627 /g607 /g615 /g610 
/g594 /g622 /g618 /g620 /g612 /g619 211{/.notdef}rp]
JEXDFU+ArialMT nf
JEXDFU+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
401.334 106.164 mo
('&\(\)!*$+,*)
[7.28867 4.47763 6.57791 4.4696 4.40573 3.703 4.40576 3.51935 4.0224 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 6260 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/c 70 def
end
GFNBAA+ArialMT /Encoding get
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A 2{/.notdef}rp /D /E 
2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 
/.notdef /R /S 13{/.notdef}rp /a /b /c 9{/.notdef}rp 
/m 5{/.notdef}rp /s 8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
422.609 115.747 mo
(c)sh
312.341 69.2381 mo
336.426 69.2381 li
336.426 47.2612 li
312.341 47.2612 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 762 37 <00030096000004e905ba0011001d002a0113b90004fff440470b0b065504
044623562366237309840906691a75057009730b8305830b062716090318
272a1e161d090913121e2a2a2929001c1d1e0201021f1e1e110008182606
0c1010025506b8ffe640330f0f025506120d0d025506060c0c025506080b
0b0655060c0c0c065506140d0d0655065425260c1c101002550c0a0d0d02
550cb8fff440150b0b06550c1a2c1d1e200120000100201010025500b8ff
f6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8fffab40c
0c065500b8fff0400a0d0d0655005d2b3b5c182b10f62b2b2b2b2b2b5d3c
fd3c4e10f62b2b2b4dedf42b2b2b2b2b2b2bed003f3cfd3c3f3cfd3c1239
2f3c10fd3c392f1139111239011217393130015d005d2b33112132161615
140607161615140e0223012132373636353426262321112132373e023534
26262321960226a8cb736667858f5780c18cfe93013d81384a4b46829efe
db016d5e26435a3a54958cfead05ba59b9655ea63327bc8067b160310352
1116664d496f29fba0070c386b4652793100>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/B 37 def
end
GFNBAA+ArialMT /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /.notdef /D 
/E 2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N /.notdef 
/P /.notdef /R /S 13{/.notdef}rp /a /b /c 
9{/.notdef}rp /m 5{/.notdef}rp /s 8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
317.324 60.6131 mo
(PK)
[5.30264 0 ]xsh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
327.929 61.7631 mo
(B)sh
324.415 69.2381 mo
324.415 90.3206 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
327.162 89.6179 mo
324.415 95.1121 li
321.604 89.6179 li
327.162 89.6179 li
ef
177.093 69.2381 mo
201.178 69.2381 li
201.178 47.2612 li
177.093 47.2612 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 1956 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/I 44 def
end
GFNBAA+ArialMT /Encoding get
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /.notdef /D 
/E 2{/.notdef}rp /H /I /.notdef /K 2{/.notdef}rp /N 
/.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b 
/c 9{/.notdef}rp /m 5{/.notdef}rp /s 8{/.notdef}rp /bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
180.16 60.6131 mo
(ID)
[2.23763 0 ]xsh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
188.209 61.7631 mo
(SKa)
[3.45007 3.45009 0 ]xsh
189.104 69.2381 mo
189.104 90.3206 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
191.851 89.6179 mo
189.104 95.1121 li
186.357 89.6179 li
191.851 89.6179 li
ef
355.528 69.2381 mo
379.613 69.2381 li
379.613 47.2612 li
355.528 47.2612 li
cp
@
0 gry
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
358.658 60.6131 mo
(ID)
[2.23761 0 ]xsh
JEXDFV+ArialMT*1 [5.1748 0 0 -5.1748 0 0 ]msf
366.644 61.7631 mo
(PKb)
[3.45007 3.51218 0 ]xsh
367.602 69.2381 mo
367.602 90.3206 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
370.35 89.6179 mo
367.602 95.1121 li
364.855 89.6179 li
370.35 89.6179 li
ef
0 lc
[1.91872 .959361 ] 0 dsh
263.468 156.763 mo
385.299 156.763 li
385.299 80.2905 li
263.468 80.2905 li
263.468 156.763 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Arial-ItalicMT gcheck setglobal} if
1 3758 571 <000200570000054205ba000e0019006f4041162010113412200b11340419
030f0f1e0e00140e0e00042d19190f032d00020f2d0e08020101142a0903
000f1f00740002000e1009091b0f0e2f0e020e461a0e172b10e65d11332f
2b103c5d0132113310ed332f33003fed3fed11392fed87052e2b7d10c401
39393130012b2b0121072103213216161514060621213733203636353426
262321018f03b324fd0f600129dcb67babf8feecfe0be7ac0103dd754d85
91fecd05baa7fe3741a57a92f464a63ba35d455f1f00>PBAAAA+Arial-ItalicMT AddT42Char 
1 6366 613 <0001ffd8fff2048f04260011009f404b0102022303041403030405070723
100014101000100c05070b0e0904051f0100060e1f090b02030a0c0b0104
020305000b077004010f00700002101228040300101003400d0f34100301
03b8027d400c13101001100317101710120a2b103c2b2b2f5d10e45d2b2b
103c103c2b10c05d5d0132321133113311332f33003f3c3fed3f3cfd3c11
123939113939870e2e2b057d10c4872e182b7d10c4313001210323132103
0606232227371633323637016f0320e2b4c6fe42892376683c63212a2245
2b280426fbda038ffd87a3810e960345b000>PBAAAA+Arial-ItalicMT AddT42Char 
1 4540 604 <00030064ffe80412043e0012001d002a006b400b162010113424200f1134
22b8ffccb30e11341db8ffe04030091134131b00151f1e1e231b1f0d0623
1f060b1e130003202620030318206f10010010101070100310732c20200a
262b10f6ed10f45d71ed332fed111739003fed3fed11392fed3911393130
012b2b2b2b01161615140623222626351000213216151406251633323635
34262322060306151416333236353426232203086564d8d29eb86d014601
14a6ae85fdb34935cecd59487cd247079087697daee816022c237b587ad4
6ac579011b0193996f65852b065b5a3b4ea7fee22b2a7ea16f506e48>PBAAAA+Arial-ItalicMT AddT42Char 
1 8450 626 <00010079ffe806af0426002a010340877219721a027c0c7c0d027b007b01
02061b761b8b1503220a031a1b1b231c19141c1c190d0f0f230a0c140a0a
0c010303232900142929007b228b2202221d29030a0f06071a190d0c0100
06131f1f1f071f250b1b1c0a1a191b1c0d0c0f0a0100030b191d19701903
0b0c700c020b00190002290a2b28191c0c0a0029100a0a29091c400d0f34
1cb8027d40142c70290129400b0f34291c170a1729170a292b0a2b103c3c
2b2b2b2f2b5d10e42b2b1139012f2b103c103c103c2b10c0c05d5d5d0132
11331133113311331133003f3c3fed3c10ed3f3c3c3c3c3c1217395d870e
2e2b057d10c4870e2e182b057d10c4872e182b7d10c4011112393130015d
5d5d5d013303061514163332363637133303061514163332363736371333
032337062322262706062322263534370125b394143c3c5c9b5b2077b398
11393875e22902026eb1e7b22695c56d8c0554b5616d94230426fd5a5e2c
3a3a698f90021cfd4b502c393acad60a0c01eefbdab2ca7d4d65657c6546
a300>PBAAAA+Arial-ItalicMT AddT42Char 
1 2176 83 <0002ffebfe690448043e0011002100fa4022451f56045e0f5a156b0f053a
15351f45044d0f49150525042e0f2b1537043c0f0510b8fff040510e1134
1c200e113459187801791889019700f821061918260c3801480167106818
06082101121102031d170211112300011400000110100e1d1f0607022801
06171f0e0b1128000e09201a001a5f1a021ab80221402400090202091111
58000988010101010910000100004c090022280110001700220acb3e182b
2b103c2b2b3c2b10c0012b7af101182f5d2b3c012f5d2b7a10f101182f2b
7ac001182f2b7a10f05d01182fed003f2b3c003fed3f2b3c003ffd11392f
87052e2b7d10c400111239870ec4313001715d5d2b2b005d5d5d03013307
3636333216151402060623222703131417161633321235342623220e0215
0133a71f5d935298c86ea0a456bf6978b11119724b9cc0816045766542fe
6905bd94614bddcea6feefa64ec2fdbf0349772e4150015fb787934991d2
>PBAAAA+Arial-ItalicMT AddT42Char 
1 7370 618 <ffffffebfe690448043e021600530000>PBAAAA+Arial-ItalicMT AddT42Char 
1 958 70 <00010073ffe80416043e001b008c400a39036914671b97060418b8ffe040
55101134390a8b11025c1b69107c09791099080506141614290943015802
5808060f240e530b012430006000900003000004121f0b07191f040b0058
200130010201f00e162007261c0f58000e100e020e4b1d384b182b4e10f6
5d4ded4e10f44ded10f45ded003fed3fed12392f5de410fde43130015d5d
5d2b005d0117060623222635341224333216150726262322060215141633
32360321b544fba0add78a0101a5abc8b201735e6da05b785858a1018313
c7c1e0c9ae0150afc19f0c65728afee782888886>PBAAAA+Arial-ItalicMT AddT42Char 
1 7386 619 <ffff0073ffe80416043e021600460000>PBAAAA+Arial-ItalicMT AddT42Char 
1 9324 632 <0002003fffe805e704430014002000b6b90012fff0b30e0f341fb8ffe040
090911341d2009113417b8ffe0405d091134192009113402120113132314
0014141400021f121201130100061e1f060713140a181f0c0b03110f0100
1314090070000200141015200f40090b340f0f14091b2009401f20340009
100970090309732214400b0e3414562114172b10e62b10f65d2bed2b1139
012f2bed2b103c5d0111331133113939003fed3f3c3fed3f3c1112392fed
87052e2b7d10c40139393130012b2b2b2b2b013303333600333616170200
2322263534372303230114163332123526262322020126b262cf260121cc
b8d20505fed8fbbdd202dc61b602a37d69b0ba018061a0ce0426fe32c701
1f05dfcffef5fe5ef5a21e2bfe3801827c8f0176c57d80feaa00>PBAAAA+Arial-ItalicMT AddT42Char 
1 8224 625 <000100970000042f042600150099404d190901090e0a0d0b0c0c230d0a14
0d0d0a03010123001414000014091403030a0e071f10100a0b0a0100060c
0d0a0b0a0c010003140b0a700a020b0070008f00030a0d100d400d0f3410
0d010db8027d40091710148f1402140d172b2f5d10e45d2b2b103c5d5d01
11331133321133003f3c3f3c3c3c11392fed3911173987052e2b0e7d10c4
87052e182b7d10c401111239393130015d13330706151416333237133303
231306232226353437e4b226246a6a816d6db4e2b5578775a3b9300426b2
a94446472d01fffbda01972d8a7f36f1>PBAAAA+Arial-ItalicMT AddT42Char 
PBAAAA+Arial-ItalicMT /CharStrings get begin
/g571 571 def
/g613 613 def
/g604 604 def
/g626 626 def
/g618 618 def
/g619 619 def
/g632 632 def
/g625 625 def
end
PBAAAA+Arial-ItalicMT /Encoding get
dup 49 /g571 put
dup 50 /g613 put
dup 51 /g604 put
dup 52 /g626 put
dup 53 /g618 put
dup 54 /g619 put
dup 55 /g632 put
dup 56 /g625 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFS+Arial-ItalicMT*1 
[32{/.notdef}rp /g570 /g621 /g620 /g607 /g615 /g610 /g622 
/g612 /g602 /g624 /g633 /g614 /g616 /g606 /g599 
/g592 /g585 /g571 /g613 /g604 /g626 /g618 /g619 
/g632 /g625 199{/.notdef}rp]
JEXDFS+Arial-ItalicMT nf
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
318.602 145.71 mo
(12,',3,#)
[3.89627 3.37375 3.32574 2.8754 3.32574 3.12158 3.32574 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
345.181 145.71 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
346.844 145.71 mo
(4%&5,3\($%#)
[4.97003 3.32455 5.04205 3.32455 3.32455 3.12039 3.32455 3.31851 3.32455 0 ]xsh
326.276 152.928 mo
($\()
[3.32034 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
332.918 152.928 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
334.582 152.928 mo
(6#\($6,3,+)
[2.99542 3.3317 3.3317 3.29572 2.99539 3.33173 3.12753 3.3317 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
364.482 152.928 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
366.146 152.928 mo
('278#)
[2.82187 3.3743 4.53339 3.06818 0 ]xsh
[1.91872 .959361 ] 0 dsh
79.3469 74.6046 mo
206.098 74.6046 li
206.098 .943512 li
79.3469 .943512 li
79.3469 74.6046 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Arial-ItalicMT gcheck setglobal} if
1 342 38 <000100baffe705d805d3001b009fb396080113b8ffe0b30f113414b8ffe0
400e0e1134102010113411200d113418b8ffe040310b1134041814180226
143f104603781004100e1416151910120f390e920b013990000100000412
2d0b03192d0409007b01b8026140140f7b0e162a3007012f070107341c0e
431d3443182b4e10e610f45d714ded10edf4ed003fed3fed12392f5de410
fdf41139123901123912393130015d5d2b2b2b2b2b005d01170600232000
11101336213204170726262320070611141633323604d3c25cfea0dbfef5
fec7eed4013be9012117b71db58ffef3a690deb298f602041bfefefc0146
0130018c0103e7fad3119f9defcefee5e2eec600>PBAAAA+Arial-ItalicMT AddT42Char 
1 3976 587 <ffff00baffe705d805d3021600260000>PBAAAA+Arial-ItalicMT AddT42Char 
1 5756 609 <0001001fffe803a3043e002600924010140e8426021f2a10113415200e11
3413b8ffcc40490e11340a1c1b010000241c1100129012021212141c1f1b
1b14241f0407141f0f0b0a211b1c1c0017200c0c21206f077f0702000710
07020773280020010112207f110111400c1134112f2b71ed332fed10f65d
71ed332fed11392f331139003fed3fed11392fed12392f5d391112392f39
1112393130012b2b2b5d0127363633321615140607161514062320033716
33323635342626233716333236353426232206015fa741c1949fb660607e
d6cefea03eac29d26582476c6f1f17168d8d5b5c3b6e0313139f7993795e
882b508d89d301410dc46d58424f148e025f5e494930>PBAAAA+Arial-ItalicMT AddT42Char 
1 8842 629 <0003003f000005f2042600030010001b00bfb9001bfff0404b0c0d341420
091134061b05110102022303001403030005111123100414101004061f1b
1b050100050406111f101002030a01000203050411100900700002090470
0402000304101016200bb8ffc040100a0b340b0b100903400d0f34100301
03b8027d400d1d10400b0e3410561c031710172b2b10e62b10e45d2b2b11
39012f2bed2b103c103c5d5d011133113311331133003f3c3c10ed3f3c3c
3c11392fed87052e2b7d10c4872e182b7d10c401111239393130012b2b01
330323013303333216161514060623213733323636353426262323053bb7
e6b6fcceb55bc1b99e5a7bb4befe3cd1e7886f4c435774ce0426fbda0426
fe65368f586ac24290245f443c541300>PBAAAA+Arial-ItalicMT AddT42Char 
1 2876 91 <0001fffd0000044d0426000f010e4014121011201102270f40115011660f
7907e0110611b8ffc040492d3b3406091609020106060001010206070700
04050606070909080a0a030101000c0e0e0f0b0b0209090a0e0f0f080e09
0601040f080707030302060a0b0b0f0f000a094c060a630bb801fe40090e
4c010f6300086307ba02220006020bb301036302ba01fe00010114b51000
6f000200ba01cf00100103b1b3182b10f55de4f4ed10fdf4ed10ed10fdf4
ed10ed003f3c103c103c3f3c103c103c12173987100e7dc408c4871008c4
0e3c08c4871008c408c40ec4c487100ec408c407103c3130015d2b5d7143
5c58b90008fff6b224350fb8fff6b71a1c34080a18350fb8fff640091517
34070a121734372b2b2b2b2b2b5923010133171617013301012327262701
0301cefef7c85a32280132ddfe42010cc86a222bfec4021b020bbd6a6101
88fde7fdf3d84566fe7d>PBAAAA+Arial-ItalicMT AddT42Char 
1 7862 623 <fffffffd0000044d04260216005b0000>PBAAAA+Arial-ItalicMT AddT42Char 
1 2536 88 <00010080ffe804760426001900fe407519081909950bb607b60ae715e518
0709080909840c86189507950aab03a90608270a37187607760a740c7518
062c012f103911491104151918171723161914164010397f160116161909
0c0c23050814083010397208010505080008191609081706280f1f020b19
180a051a281619080510175816b801ba400f18583f190110194f195f196f
190419b8027db31b095808b801b7401c0c20300501d005e005f005032f05
3f05020519170517051a0a38c1182b2b103c2b2b4e2f5d71724dedf4ed10
f45d71edf4ed2b103c103c2b10c0003f3c3fed2b3f3c3c3c00111239870e
2e5d2b2b057d10c4872e5d2b182b7d10c40e10c43130005d015d5d5d2506
2322263534371333030615141633323636373637133303230319bfc87b97
2280b58e1249474c916921161d60b5dea7c0d88d6643a30265fd59552f3c
434a7e56378a01cbfbda>PBAAAA+Arial-ItalicMT AddT42Char 
1 3446 217 <000100db048a0332058e000d0035b5080707010100b80281b3041f0b08b8
ff80400f5b5e34082007a5012000a30e70b7182b10f6fdf6ed2b002ffdf4
3c103c103c31301333161633323637330606232226db760b4c4548691c78
22b3767492058e49434a42788c8d>PBAAAA+Arial-ItalicMT AddT42Char 
1 6034 611 <ffff0080ffe8047605c5023600580000011700d900f600370016400a0100
1a22081740010125b901eb0029002b012b35>PBAAAA+Arial-ItalicMT AddT42Char 
1 7196 617 <0001003f00000471042600070085403f0102022303041403030405060623
07001407070004051f010006020306070a01040205000607720401090070
000204030007103f030103400d0f3410030103b8027d400d0907400b0e34
075608031707172b2b10e62b10ed5d2b712b103c103c5d5d011133113332
1133003f3c3c3c3f3cfd3c87052e2b7d10c4872e182b7d10c43130012103
23132103230122034fe0b4c3fe15c3b30426fbda0394fc6c>PBAAAA+Arial-ItalicMT AddT42Char 
PBAAAA+Arial-ItalicMT /CharStrings get begin
/g587 587 def
/g609 609 def
/g629 629 def
/g623 623 def
/g611 611 def
/g617 617 def
end
PBAAAA+Arial-ItalicMT /Encoding get
dup 57 /g587 put
dup 58 /g609 put
dup 59 /g629 put
dup 60 /g623 put
dup 61 /g611 put
dup 62 /g617 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFS+Arial-ItalicMT*1 
[32{/.notdef}rp /g570 /g621 /g620 /g607 /g615 /g610 /g622 
/g612 /g602 /g624 /g633 /g614 /g616 /g606 /g599 
/g592 /g585 /g571 /g613 /g604 /g626 /g618 /g619 
/g632 /g625 /g587 /g609 /g629 /g623 /g611 /g617 
193{/.notdef}rp]
JEXDFS+Arial-ItalicMT nf
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
81.3274 8.29016 mo
(93*:'\()
[4.32978 3.12874 3.20076 2.75038 2.87656 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+Arial-ItalicMT gcheck setglobal} if
1 116 15 <00010031fed8016800cd0009004e40112407350702070609030804050300
066a07b80282b2090003b8029a401202020145000a03af024501af004d0a
6de6182b10f6f4fde4003ffd3c10ed103cf6ed1117390112390010c93130
015d333733070606073736376f2bce25228f61117726cdb3a1960b4f21b8
>HIBBAA+Arial-ItalicMT AddT42Char 
1 236 36 <0002ffd7000004ef05ba0007000e00a04046080606020608080705090a0c
0406080e0c0c0706080f0509100c970c0102200100001e070c1407070c02
0c04041e03021403030201070f04030203100cfb0201020908210506b801
bb400e07070404030300080ca90f8382182b1910f400183f3c103c103c10
f43cfd3c3f3ced01111739113939872e2b877dc4872e182b7d10c42b1112
393912393987100ec405c4c4870ec405c4c407103c8710c4313023013313
230321030121032627060729033fe7f2be47fdafeb013f01e53921083260
05bafa4601a6fe5a023d0170db927ead>HIBBAA+Arial-ItalicMT AddT42Char 
HIBBAA+Arial-ItalicMT /CharStrings get begin
/comma 15 def
/A 36 def
end
HIBBAA+Arial-ItalicMT /Encoding get
dup 44 /comma put
dup 65 /A put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFT+Arial-ItalicMT*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 190{/.notdef}rp]
JEXDFT+Arial-ItalicMT nf
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
100.947 8.29016 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
102.604 8.29016 mo
(6#'5#"$;<)
[2.99065 3.32694 2.82249 3.38696 3.32694 4.99036 3.29093 4.40784 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
134.162 8.29016 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
135.826 8.29016 mo
('278#=)
[2.81892 3.37138 4.53641 3.07111 3.32336 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
156.27 8.29016 mo
( A, )
[1.72592 3.96114 1.66107 0 ]xsh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
81.3334 15.5085 mo
(:\(4%&5,3\($$;<)
[2.75817 3.38274 4.98019 3.32273 4.98019 3.30467 3.38274 3.13058 3.30467 3.26866 3.32273 4.40968 
0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
127.905 15.5085 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
129.568 15.5085 mo
($\()
[3.32034 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
136.21 15.5085 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
137.873 15.5085 mo
(>\(5,2#)
[3.31915 3.3251 3.32512 3.3251 3.37312 0 ]xsh
1 lc
[] 0 dsh
38.268 46.6223 mo
72.2555 46.6223 li
72.2555 24.6454 li
38.268 24.6454 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: QJJAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+ArialMT gcheck setglobal} if
1 2862 585 <000100a00000052105ba000700b4b90009ffc0400d131534030708051e00
02032002b8ffeeb40f0f025502b8ffee400b0d0d025502100c0c025502b8
ffe0b40b0b065502b8fffe40150c0d065502390f09800902090620072010
10025507b8fff6b40f0f025507b8fff6b40d0d025507b8fffa400b0c0c02
55070a0b0b065507b8fff6b70c0d065520070107b8ffc04012131534075d
082009012009500960097009045d7110f62b5d2b2b2b2b2b2bed105df62b
2b2b2b2bed003fed3f3c3130012b1321112311211123a00481c3fd04c205
bafa46050dfaf300>QJJAAA+ArialMT AddT42Char 
1 356 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>QJJAAA+ArialMT AddT42Char 
1 3434 602 <ffff004affe8041c043e020600440000>QJJAAA+ArialMT AddT42Char 
1 4672 613 <00010018fff9042304260012014640161c08052b000603330c0e1c0a0a03
2514400b0b025502b8ffcc400b1010025502280f0f025502b8fffa400b0e
0e025502140d0d025502b8fff2400b0c0c0255020a0b0b025502b8ffecb4
0909025502b8fff1b40b0c065502b8fff6401b0d0d065502040f0f065502
10101006550240333634ff0201024e14b8ffc04019343634b014f0140240
1460147014a014b014c0140614052512b8fff6b41111025512b8ffd04011
1010025512160f0f025512160d0d025512b8ffe6b40c0c025512b8ffecb4
0b0b025512b8ffeeb40c0c065512b8fff2b40d0d065512b8ffe040160f10
06554f125f126f127012df120512bb0c0c14137cb9010a00182b1112392f
f45d2b2b2b2b2b2b2b2b2bed105d712bf6712b2b2b2b2b2b2b2b2b2b2b2b
2bed003fed10e43fed3130437940120f110709082610250f09121b011107
0e1b002b012b2b2b818113211123112111140606232227353332363635df
0344b3fe23186c663f524f3830100426fbda0391fdefb97658089617328a
>QJJAAA+ArialMT AddT42Char 
1 6526 630 <00020084000003ec0426000a0013010640161f08022b13130a00060b2b0a
0a0f24060e0c0c025506b8fffcb40b0b065506b8fff1b40c0c065506b8ff
f6400b0f0f065506061010065506b8ffc040372425343006010006100620
060306311f153f155f157f159f15af15bf15df15080f15010f158f15af15
bf15cf15df15ef150715010b2500b8fffc400b1010025500040b0c025500
b8fffcb40c0c065500b8fffeb40d0d065500b8fff4b40f0f065500b8ffec
b41010065500b8ffc04012333634f0000100002000d000e00004004e1410
f65d712b2b2b2b2b2b2bfd3c1071725df65d5d2b2b2b2b2b2bed003fed3f
12392ffd31304379401604110d080f1b0111040f1b010e070c1b00100512
1b012b2b012b2b81133311333216151406232137333236353426232384b4
e4dff1c9ddfe3eb4bdab926cb9d50426fe61ad9885bd945459456c00>QJJAAA+ArialMT AddT42Char 
QJJAAA+ArialMT /CharStrings get begin
/g585 585 def
/g602 602 def
/g613 613 def
/g630 630 def
end
QJJAAA+ArialMT /Encoding get
dup 45 /g585 put
dup 46 /g602 put
dup 47 /g613 put
dup 48 /g630 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFU+ArialMT*1 
[32{/.notdef}rp /g587 /g616 /g603 /g627 /g607 /g615 /g610 
/g594 /g622 /g618 /g620 /g612 /g619 /g585 /g602 
/g613 /g630 207{/.notdef}rp]
JEXDFU+ArialMT nf
JEXDFU+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
41.2706 37.9974 mo
(-.\)!/0)
[5.75368 4.45205 4.40416 4.46801 4.66761 0 ]xsh
72.2555 35.6339 mo
98.5767 35.6339 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
97.9379 32.8867 mo
103.432 35.6339 li
97.9379 38.3809 li
97.9379 32.8867 li
ef
0 lc
[1.91872 .959361 ] 0 dsh
303.141 74.6046 mo
385.299 74.6046 li
385.299 .943512 li
303.141 .943512 li
303.141 74.6046 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Arial-ItalicMT gcheck setglobal} if
1 4778 605 <0001004effe803d8043e00270088b90016ffe040520f1034740c01091f1d
1d2c0b09140b0b090b1d091f0411012f00010000251f0306150014101402
1414111f170b1d0b1f0904220e14201515222040066f0602000610067006
03067329002001010e201a262810f6ed332fed10f65d71ed332fed111217
39003fed332f5d393fed332f5d39111739870e2e2b870e7dc43130015d2b
012712213216151406060706070615141633323637170221222635343636
373637363534262322060161a56f012abec55c94a2c1414194667f792c99
60fe96d3cf6292aadd2e2d6a6a645d031e0c0114a87b537b45282e2c2c47
495663730cfeaaa87956904a273230302f38543f>PBAAAA+Arial-ItalicMT AddT42Char 
1 9128 630 <0002003f000003f00426000c00170075b90017fff0402f0c0d3410200911
340217010d0d230c00140c0c00021f1717010100060d1f0c0a01000d0c09
00700002000c10122007b8ffc04010090a340707190c400b0e340c56180c
172b10e62b11332f2bed2b103c5d0111331133003fed3f3c11392fed8705
2e2b7d10c40139393130012b2b0133033332161615140606232137333236
363534262623230124b55bc1b99e5a7bb4befe3cd1e7886f4c435774ce04
26fe65368f586ac24290245f443c5413>PBAAAA+Arial-ItalicMT AddT42Char 
PBAAAA+Arial-ItalicMT /CharStrings get begin
/g605 605 def
/g630 630 def
end
PBAAAA+Arial-ItalicMT /Encoding get
dup 63 /g605 put
dup 64 /g630 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFS+Arial-ItalicMT*1 
[32{/.notdef}rp /g570 /g621 /g620 /g607 /g615 /g610 /g622 
/g612 /g602 /g624 /g633 /g614 /g616 /g606 /g599 
/g592 /g585 /g571 /g613 /g604 /g626 /g618 /g619 
/g632 /g625 /g587 /g609 /g629 /g623 /g611 /g617 
/g605 /g630 191{/.notdef}rp]
JEXDFS+Arial-ItalicMT nf
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
305.121 8.29016 mo
(93*:'\()
[4.32977 3.12875 3.20074 2.7504 2.87656 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
324.741 8.29016 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
326.398 8.29016 mo
(,"'5;";<)
[3.32391 4.98734 2.87354 3.31796 4.40485 4.98734 4.40482 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
357.704 8.29016 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
359.367 8.29016 mo
('278#=)
[2.81894 3.37137 4.53641 3.13123 3.32336 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
379.872 8.29016 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
305.128 15.5085 mo
(-5!?%<)
[3.30826 3.32629 2.98999 2.94797 3.32629 0 ]xsh
JEXDFT+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
324.038 15.5085 mo
( )sh
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
325.702 15.5085 mo
(>,2@:,3\("#2#=)
[3.29633 3.33237 3.38034 3.15222 2.78583 3.33237 3.12817 3.33234 5.04379 3.32034 3.38037 3.33234 
0 ]xsh
116.912 49.1139 mo
124.323 49.1139 130.328 43.1086 130.328 35.6339 cv
130.328 28.223 124.323 22.2177 116.912 22.2177 cv
109.437 22.2177 103.432 28.223 103.432 35.6339 cv
103.432 43.1086 109.437 49.1139 116.912 49.1139 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
1 lc
[] 0 dsh
116.912 49.1139 mo
124.323 49.1139 130.328 43.1086 130.328 35.6339 cv
130.328 28.223 124.323 22.2177 116.912 22.2177 cv
109.437 22.2177 103.432 28.223 103.432 35.6339 cv
103.432 43.1086 109.437 49.1139 116.912 49.1139 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
113.973 37.9974 mo
(D)sh
116.912 49.1139 mo
116.912 58.2496 li
128.348 58.2496 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
127.645 55.5025 mo
133.203 58.2496 li
127.645 61.0606 li
127.645 55.5025 li
ef
233.058 122.072 mo
240.468 122.072 246.474 116.003 246.474 108.592 cv
246.474 101.181 240.468 95.1121 233.058 95.1121 cv
225.583 95.1121 219.578 101.181 219.578 108.592 cv
219.578 116.003 225.583 122.072 233.058 122.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
ef
233.058 122.072 mo
240.468 122.072 246.474 116.003 246.474 108.592 cv
246.474 101.181 240.468 95.1121 233.058 95.1121 cv
225.583 95.1121 219.578 101.181 219.578 108.592 cv
219.578 116.003 225.583 122.072 233.058 122.072 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: GFNBAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+ArialMT gcheck setglobal} if
1 4740 61 <00010029000004b005ba000c010cb1120eb8ffc0400f0d11344801470848
09030a080b0902b10602435458400e0c000e0d010b1e0c0808051e060200
3ffd3c3ffdc401111239391b402bab04010302010104090a04080a0a261d
2134280a01f90a010a200104140101040a280b1c3401280b1c3408b8ffd8
b30b1c3404b8ffd840130b1c34010a0408051e0706020b0a1e0c00080abb
01b50001000401b5401b00073008400802084a0c3f0b010b1a0e01000506
5100190db699182b4e10f44df43c103c4e10f65d3c4df4713c10e410fc00
3f3cfd3c3f3cfd3c3c1139012b2b2b2b87052e2b5d712b877dc40e10c487
0e10c4c4017259313001715d2b435c584009022221390118213909b8ffde
b51939022219392b2b2b2b59333501363721352115010721152902ef5048
fcce041afcc95903a8b403ab644aadadfc0767ad>GFNBAA+ArialMT AddT42Char 
GFNBAA+ArialMT /CharStrings get begin
/Z 61 def
end
GFNBAA+ArialMT /Encoding get
dup 90 /Z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFV+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /.notdef /D 
/E 2{/.notdef}rp /H /I /.notdef /K 2{/.notdef}rp /N 
/.notdef /P /.notdef /R /S 6{/.notdef}rp /Z 6{/.notdef}rp 
/a /b /c 9{/.notdef}rp /m 5{/.notdef}rp /s 8{/.notdef}rp 
/bar 131{/.notdef}rp]
JEXDFV+ArialMT nf
JEXDFV+ArialMT*1 [7.9858 0 0 -7.9858 0 0 ]msf
230.566 110.956 mo
(Z)sh
246.474 108.592 mo
258.548 108.592 li
258.548 137.66 li
267.876 137.66 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
267.173 134.849 mo
272.667 137.66 li
267.173 140.408 li
267.173 134.849 li
ef
0 lc
[1.91872 .959361 ] 0 dsh
209.675 156.763 mo
249.349 156.763 li
249.349 80.2905 li
209.675 80.2905 li
209.675 156.763 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Arial-ItalicMT gcheck setglobal} if
1 5268 608 <0001ffc5000005ee0426003a012d405d1b3a7927892703021c011d3a1f00
1e151a1818231715141717152621232323242614242426011d1d231e0014
1e1e002a370611040e13273a26211a150424023a1f1c901f011f1f001e0e
1f0909002e1f333301000617181d1e23240a11b8ffd6b60f113411060c13
b8ffe040090f1134131a15031737b8ffe0403c101134343701372a312621
27031e240b8f0c010c0c1730403101313124011d1e700001001e10181723
241724001e01c01e01101e4f1e8f1e031e1e172b2f5d5d7133332f332f33
2b103c5d0111333211332f713311332f5d33111217391139395d2b111739
2b1139392b003f3c3c3c3c3c3f3c3c10ed103c10ed1112392f5d3cfd3c12
173912393911173987052e2b7d10c4872e182b870e7dc487052e182b870e
7dc40111123939111239393130015d013303173236373636333217072623
220607060716161713230326262703231306060703230136372626272627
26232207373633321716171616330301b0620e396750578e4c3739292418
2d43366e892f572d85ba693151476cb26b376072dbdc01197c8c3c3c1a0c
11122217360c302e5f2a291d1d454c0426fe3a0160859151126c0c3e60c5
2e114d72fead010e7f590bfe0f01f1023e94fee301629c25266c8c461817
0e730b3435868552>PBAAAA+Arial-ItalicMT AddT42Char 
PBAAAA+Arial-ItalicMT /CharStrings get begin
/g608 608 def
end
PBAAAA+Arial-ItalicMT /Encoding get
dup 65 /g608 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JEXDFS+Arial-ItalicMT*1 
[32{/.notdef}rp /g570 /g621 /g620 /g607 /g615 /g610 /g622 
/g612 /g602 /g624 /g633 /g614 /g616 /g606 /g599 
/g592 /g585 /g571 /g613 /g604 /g626 /g618 /g619 
/g632 /g625 /g587 /g609 /g629 /g623 /g611 /g617 
/g605 /g630 /g608 190{/.notdef}rp]
JEXDFS+Arial-ItalicMT nf
JEXDFS+Arial-ItalicMT*1 [6.0053 0 0 -6.0053 0 0 ]msf
223.858 152.929 mo
(9A\("%#)
[4.31778 4.11362 3.32089 5.04443 3.32089 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/JEXDFV+ArialMT*1 uf
/JEXDFV+ArialMT uf
/GFNBAA+ArialMT uf
/JEXDFU+ArialMT*1 uf
/JEXDFU+ArialMT uf
/QJJAAA+ArialMT uf
/JEXDFT+Arial-ItalicMT*1 uf
/JEXDFT+Arial-ItalicMT uf
/HIBBAA+Arial-ItalicMT uf
/JEXDFS+Arial-ItalicMT*1 uf
/JEXDFS+Arial-ItalicMT uf
/PBAAAA+Arial-ItalicMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
